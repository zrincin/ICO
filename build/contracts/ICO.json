{
  "contractName": "ICO",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_deposit",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_investor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "Invest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxInvestment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minInvestment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "raisedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sales",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "investor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenTradeStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_investor",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lockupPeriod",
          "type": "uint256"
        }
      ],
      "name": "startICO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentState",
      "outputs": [
        {
          "internalType": "enum ICO.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopICO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resumeICO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newDeposit",
          "type": "address"
        }
      ],
      "name": "changeDepositAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_deposit\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newDeposit\",\"type\":\"address\"}],\"name\":\"changeDepositAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentState\",\"outputs\":[{\"internalType\":\"enum ICO.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"name\":\"startICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTradeStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/zrinc/Projects/ICO/contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/zrinc/Projects/ICO/contracts/ICO.sol\":{\"keccak256\":\"0x372e622df91256429ca8c221e0c38707ae12e7930c2e32e128922a85e87f9cb9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d9d32942a947d0de7b85b08fd7bb75a67ceb68972160ecf851683c251e84f370\",\"dweb:/ipfs/QmRN655oLiMitjxPXbPVPzEyDvr7VsfZTncd4QytNMwdBb\"]},\"/C/Users/zrinc/Projects/ICO/contracts/IERC20.sol\":{\"keccak256\":\"0x3289b3a1b069a13428cbbfa5ac115782d77feef8cbead79926255adad6a1ef04\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d8d8017720dab66423d7f3f7144b1f8d83e41c8f8c41aa3814aee5f185d177c8\",\"dweb:/ipfs/QmVh2B7d8WYhB7JrqVj2j6QUvgVbDsjHd7sFbk1xbUF7wJ\"]},\"/C/Users/zrinc/Projects/ICO/contracts/ZCC.sol\":{\"keccak256\":\"0xb0b79ed716a9c6a32d6c669c77bc16185a1c1c570ae35bf187cbb22d35ed736e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://982a8f159b598b858ceedd1de2277e45fc2077f273120096425cf398401c0072\",\"dweb:/ipfs/QmdQtFU1i4dpSNqPThg3CLTWLbXZ7uJZ8uQcYAQ1t1v4QC\"]}},\"version\":1}",
  "bytecode": "0x608060405264174876e8006000556005600155662386f26fc10000600b5569010f0cf064dd59200000600c5567016345785d8a0000600d556802b5e3af16b1880000600e553480156200005157600080fd5b5060405162003d3c38038062003d3c83398181016040528101906200007791906200028c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005460036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601360006101000a81548160ff02191690836003811115620001ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604051620002029062000267565b604051809103906000f0801580156200021f573d6000803e3d6000fd5b50600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000306565b610d568062002fe683390190565b6000815190506200028681620002ec565b92915050565b6000602082840312156200029f57600080fd5b6000620002af8482850162000275565b91505092915050565b6000620002c582620002cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002f781620002b8565b81146200030357600080fd5b50565b612cd080620003166000396000f3fe6080604052600436106101d05760003560e01c806395d89b41116100f7578063b5f522f711610095578063cc9ba58311610064578063cc9ba58314610670578063d0e30db01461069b578063dd62ed3e146106c6578063e8b5e51f14610703576101e0565b8063b5f522f7146105c5578063c10b935814610603578063c59ee1dc1461062e578063c8e569a814610659576101e0565b80639cbd7da5116100d15780639cbd7da51461051b5780639d76ea5814610532578063a9059cbb1461055d578063ab0bcc411461059a576101e0565b806395d89b411461049e5780639b19251a146104c95780639c08d549146104f2576101e0565b8063313ce5671161016f5780636d58c88f1161013e5780636d58c88f146103e257806370a082311461040b5780637ff9b596146104485780638ac2c68014610473576101e0565b8063313ce56714610336578063378aa70114610361578063401938831461038c578063481c6a75146103b7576101e0565b806308003f78116101ab57806308003f7814610266578063095ea7b31461029157806318160ddd146102ce57806323b872dd146102f9576101e0565b80622e1316146101e557806302d05d3f1461021057806306fdde031461023b576101e0565b366101e0576101dd610721565b50005b600080fd5b3480156101f157600080fd5b506101fa610d6d565b60405161020791906129ff565b60405180910390f35b34801561021c57600080fd5b50610225610d73565b6040516102329190612791565b60405180910390f35b34801561024757600080fd5b50610250610d99565b60405161025d919061285d565b60405180910390f35b34801561027257600080fd5b5061027b610dd2565b6040516102889190612827565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190612285565b610feb565b6040516102c59190612827565b60405180910390f35b3480156102da57600080fd5b506102e3611123565b6040516102f091906129ff565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190612236565b61112c565b60405161032d9190612827565b60405180910390f35b34801561034257600080fd5b5061034b611189565b60405161035891906129ff565b60405180910390f35b34801561036d57600080fd5b5061037661118f565b6040516103839190612842565b60405180910390f35b34801561039857600080fd5b506103a161126c565b6040516103ae91906129ff565b60405180910390f35b3480156103c357600080fd5b506103cc611272565b6040516103d99190612791565b60405180910390f35b3480156103ee57600080fd5b50610409600480360381019061040491906121d1565b611298565b005b34801561041757600080fd5b50610432600480360381019061042d91906121a8565b61136c565b60405161043f91906129ff565b60405180910390f35b34801561045457600080fd5b5061045d6113b5565b60405161046a91906129ff565b60405180910390f35b34801561047f57600080fd5b506104886113bb565b60405161049591906129ff565b60405180910390f35b3480156104aa57600080fd5b506104b36113c1565b6040516104c0919061285d565b60405180910390f35b3480156104d557600080fd5b506104f060048036038101906104eb91906121a8565b6113fa565b005b3480156104fe57600080fd5b5061051960048036038101906105149190612313565b6115a7565b005b34801561052757600080fd5b506105306117d4565b005b34801561053e57600080fd5b506105476119cf565b6040516105549190612791565b60405180910390f35b34801561056957600080fd5b50610584600480360381019061057f9190612285565b6119f5565b6040516105919190612827565b60405180910390f35b3480156105a657600080fd5b506105af611a50565b6040516105bc91906129ff565b60405180910390f35b3480156105d157600080fd5b506105ec60048036038101906105e791906122c1565b611a56565b6040516105fa9291906127c7565b60405180910390f35b34801561060f57600080fd5b50610618611aaa565b60405161062591906129ff565b60405180910390f35b34801561063a57600080fd5b50610643611ab0565b60405161065091906129ff565b60405180910390f35b34801561066557600080fd5b5061066e611ab6565b005b34801561067c57600080fd5b50610685611cb2565b60405161069291906129ff565b60405180910390f35b3480156106a757600080fd5b506106b0611cb8565b6040516106bd91906127ac565b60405180910390f35b3480156106d257600080fd5b506106ed60048036038101906106e891906121fa565b611cde565b6040516106fa91906129ff565b60405180910390f35b61070b610721565b6040516107189190612827565b60405180910390f35b600060011515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad906128bf565b60405180910390fd5b6107be61118f565b601360006101000a81548160ff02191690836003811115610808577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060016003811115610847577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff16600381111561088f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c69061287f565b60405180910390fd5b600d5434101580156108e35750600e543411155b610922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610919906129bf565b60405180910390fd5b600c54600f541115610969576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109609061295f565b60405180910390fd5b34600f600082825461097b9190612a36565b9250508190555034600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109d19190612a36565b92505081905550600e54600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a53906128df565b60405180910390fd5b6000600b5434610a6c9190612a8c565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad857600080fd5b505afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1091906122ea565b905080821115610b49577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600860405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c419190612a36565b925050819055508160036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cb99190612abd565b92505081905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d28573d6000803e3d6000fd5b507f4ae4bd7655e0d350876a23cd90c4227b13db560e34435c6a488150a9c844bf5f333484604051610d5c939291906127f0565b60405180910390a160019250505090565b600e5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600b81526020017f5a72696e43696e436f696e00000000000000000000000000000000000000000081525081565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5b9061299f565b60405180910390fd5b610e6c61118f565b601360006101000a81548160ff02191690836003811115610eb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060026003811115610ef5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115610f3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f74906128ff565b60405180910390fd5b600060036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905090565b60003373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561102657600080fd5b6000821161103357600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161111191906129ff565b60405180910390a36001905092915050565b60008054905090565b60006012544211611172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111699061293f565b60405180910390fd5b61117d848484611d65565b50600190509392505050565b60015481565b60006003808111156111ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115611212577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156112215760039050611269565b6010544211158061123457506000601154145b156112425760009050611269565b601054421015801561125657506011544211155b156112645760019050611269565b600290505b90565b600c5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f9061299f565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b5481565b600d5481565b6040518060400160405280600381526020017f5a4343000000000000000000000000000000000000000000000000000000000081525081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114819061299f565b60405180910390fd5b600060038111156114c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff16600381111561150c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461154c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115439061297f565b60405180910390fd5b6001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162e9061299f565b60405180910390fd5b61163f61118f565b601360006101000a81548160ff02191690836003811115611689577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600060038111156116c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115611710577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611747906129df565b60405180910390fd5b42601081905550816010546117659190612a36565b601181905550806011546117799190612a36565b6012819055506001601360006101000a81548160ff021916908360038111156117cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185b9061299f565b60405180910390fd5b61186c61118f565b601360006101000a81548160ff021916908360038111156118b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506003808111156118f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff16600381111561193c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461197c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119739061291f565b60405180910390fd5b6001601360006101000a81548160ff021916908360038111156119c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006012544211611a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a329061293f565b60405180910390fd5b611a458383611feb565b506001905092915050565b60105481565b60088181548110611a6657600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60115481565b600f5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3d9061299f565b60405180910390fd5b611b4e61118f565b601360006101000a81548160ff02191690836003811115611b98577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060016003811115611bd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115611c1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c569061289f565b60405180910390fd5b6003601360006101000a81548160ff02191690836003811115611cab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b60125481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611db357600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611e3c57600080fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e8b9190612abd565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ee19190612a36565b9250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611f749190612abd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611fd891906129ff565b60405180910390a3600190509392505050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561203957600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120889190612abd565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120de9190612a36565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161214291906129ff565b60405180910390a36001905092915050565b60008135905061216381612c55565b92915050565b60008135905061217881612c6c565b92915050565b60008135905061218d81612c83565b92915050565b6000815190506121a281612c83565b92915050565b6000602082840312156121ba57600080fd5b60006121c884828501612154565b91505092915050565b6000602082840312156121e357600080fd5b60006121f184828501612169565b91505092915050565b6000806040838503121561220d57600080fd5b600061221b85828601612154565b925050602061222c85828601612154565b9150509250929050565b60008060006060848603121561224b57600080fd5b600061225986828701612154565b935050602061226a86828701612154565b925050604061227b8682870161217e565b9150509250925092565b6000806040838503121561229857600080fd5b60006122a685828601612154565b92505060206122b78582860161217e565b9150509250929050565b6000602082840312156122d357600080fd5b60006122e18482850161217e565b91505092915050565b6000602082840312156122fc57600080fd5b600061230a84828501612193565b91505092915050565b6000806040838503121561232657600080fd5b60006123348582860161217e565b92505060206123458582860161217e565b9150509250929050565b61235881612b03565b82525050565b61236781612af1565b82525050565b61237681612b15565b82525050565b61238581612b5e565b82525050565b600061239682612a1a565b6123a08185612a25565b93506123b0818560208601612b70565b6123b981612c30565b840191505092915050565b60006123d1601983612a25565b91507f4552524f523a2049434f206d75737420626520616374697665000000000000006000830152602082019050919050565b6000612411602d83612a25565b91507f4552524f523a2049434f20616c72656164792073746f70706564206f72206e6f60008301527f74207965742073746172746564000000000000000000000000000000000000006020830152604082019050919050565b6000612477602683612a25565b91507f4552524f523a204f6e6c7920617070726f76656420696e766573746f7273206160008301527f6c6c6f77656400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124dd601e83612a25565b91507f4552524f523a204d617820696e766573746d656e7420657863656564656400006000830152602082019050919050565b600061251d601c83612a25565b91507f4552524f523a2049434f207374696c6c20696e2070726f6772657373000000006000830152602082019050919050565b600061255d602d83612a25565b91507f4552524f523a2049434f20616c72656164792072756e6e696e67206f72206e6f60008301527f74207965742073746172746564000000000000000000000000000000000000006020830152604082019050919050565b60006125c3602e83612a25565b91507f4552524f523a204c6f636b2d757020706572696f642c20746f6b656e73206e6f60008301527f742072656c6561736564207965740000000000000000000000000000000000006020830152604082019050919050565b6000612629601d83612a25565b91507f4552524f523a204e6f7420656e6f75676820746f6b656e73206c6566740000006000830152602082019050919050565b6000612669601383612a25565b91507f49434f20616c72656164792073746172746564000000000000000000000000006000830152602082019050919050565b60006126a9601b83612a25565b91507f4552524f523a204f6e6c79206d616e6167657220616c6c6f77656400000000006000830152602082019050919050565b60006126e9602183612a25565b91507f4552524f523a20416d6f756e7420746f6f206c6f77206f7220746f6f2068696760008301527f68000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061274f601a83612a25565b91507f4552524f523a2049434f20616c726561647920737461727465640000000000006000830152602082019050919050565b61278b81612b54565b82525050565b60006020820190506127a6600083018461235e565b92915050565b60006020820190506127c1600083018461234f565b92915050565b60006040820190506127dc600083018561234f565b6127e96020830184612782565b9392505050565b6000606082019050612805600083018661235e565b6128126020830185612782565b61281f6040830184612782565b949350505050565b600060208201905061283c600083018461236d565b92915050565b6000602082019050612857600083018461237c565b92915050565b60006020820190508181036000830152612877818461238b565b905092915050565b60006020820190508181036000830152612898816123c4565b9050919050565b600060208201905081810360008301526128b881612404565b9050919050565b600060208201905081810360008301526128d88161246a565b9050919050565b600060208201905081810360008301526128f8816124d0565b9050919050565b6000602082019050818103600083015261291881612510565b9050919050565b6000602082019050818103600083015261293881612550565b9050919050565b60006020820190508181036000830152612958816125b6565b9050919050565b600060208201905081810360008301526129788161261c565b9050919050565b600060208201905081810360008301526129988161265c565b9050919050565b600060208201905081810360008301526129b88161269c565b9050919050565b600060208201905081810360008301526129d8816126dc565b9050919050565b600060208201905081810360008301526129f881612742565b9050919050565b6000602082019050612a146000830184612782565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612a4182612b54565b9150612a4c83612b54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a8157612a80612ba3565b5b828201905092915050565b6000612a9782612b54565b9150612aa283612b54565b925082612ab257612ab1612bd2565b5b828204905092915050565b6000612ac882612b54565b9150612ad383612b54565b925082821015612ae657612ae5612ba3565b5b828203905092915050565b6000612afc82612b34565b9050919050565b6000612b0e82612b34565b9050919050565b60008115159050919050565b6000819050612b2f82612c41565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b6982612b21565b9050919050565b60005b83811015612b8e578082015181840152602081019050612b73565b83811115612b9d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60048110612c5257612c51612c01565b5b50565b612c5e81612af1565b8114612c6957600080fd5b50565b612c7581612b03565b8114612c8057600080fd5b50565b612c8c81612b54565b8114612c9757600080fd5b5056fea26469706673582212201dbacda9eb594617f76b0e0c22e4a8dedd4eab7625d800dd8086ad58ad3f9bed64736f6c63430008000033608060405264174876e800600055600560015534801561001e57600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005460036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c7f806100d76000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063313ce56711610066578063313ce5671461015d57806370a082311461017b57806395d89b41146101ab578063a9059cbb146101c9578063dd62ed3e146101f95761009e565b806302d05d3f146100a357806306fdde03146100c1578063095ea7b3146100df57806318160ddd1461010f57806323b872dd1461012d575b600080fd5b6100ab610229565b6040516100b89190610a47565b60405180910390f35b6100c961024f565b6040516100d69190610a7d565b60405180910390f35b6100f960048036038101906100f491906109a5565b610288565b6040516101069190610a62565b60405180910390f35b6101176103c0565b6040516101249190610a9f565b60405180910390f35b61014760048036038101906101429190610956565b6103c9565b6040516101549190610a62565b60405180910390f35b61016561064f565b6040516101729190610a9f565b60405180910390f35b610195600480360381019061019091906108f1565b610655565b6040516101a29190610a9f565b60405180910390f35b6101b361069e565b6040516101c09190610a7d565b60405180910390f35b6101e360048036038101906101de91906109a5565b6106d7565b6040516101f09190610a62565b60405180910390f35b610213600480360381019061020e919061091a565b610840565b6040516102209190610a9f565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600b81526020017f5a72696e43696e436f696e00000000000000000000000000000000000000000081525081565b60003373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156102c357600080fd5b600082116102d057600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103ae9190610a9f565b60405180910390a36001905092915050565b60008054905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561041757600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104a057600080fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ef9190610b2c565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105459190610ad6565b9250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d89190610b2c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161063c9190610a9f565b60405180910390a3600190509392505050565b60015481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600381526020017f5a4343000000000000000000000000000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561072557600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107749190610b2c565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ca9190610ad6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161082e9190610a9f565b60405180910390a36001905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000813590506108d681610c1b565b92915050565b6000813590506108eb81610c32565b92915050565b60006020828403121561090357600080fd5b6000610911848285016108c7565b91505092915050565b6000806040838503121561092d57600080fd5b600061093b858286016108c7565b925050602061094c858286016108c7565b9150509250929050565b60008060006060848603121561096b57600080fd5b6000610979868287016108c7565b935050602061098a868287016108c7565b925050604061099b868287016108dc565b9150509250925092565b600080604083850312156109b857600080fd5b60006109c6858286016108c7565b92505060206109d7858286016108dc565b9150509250929050565b6109ea81610b60565b82525050565b6109f981610b72565b82525050565b6000610a0a82610aba565b610a148185610ac5565b9350610a24818560208601610ba8565b610a2d81610c0a565b840191505092915050565b610a4181610b9e565b82525050565b6000602082019050610a5c60008301846109e1565b92915050565b6000602082019050610a7760008301846109f0565b92915050565b60006020820190508181036000830152610a9781846109ff565b905092915050565b6000602082019050610ab46000830184610a38565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610ae182610b9e565b9150610aec83610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2157610b20610bdb565b5b828201905092915050565b6000610b3782610b9e565b9150610b4283610b9e565b925082821015610b5557610b54610bdb565b5b828203905092915050565b6000610b6b82610b7e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610bc6578082015181840152602081019050610bab565b83811115610bd5576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b610c2481610b60565b8114610c2f57600080fd5b50565b610c3b81610b9e565b8114610c4657600080fd5b5056fea26469706673582212204a81e4798fad11e426fec0e47c17f05ef8134b34156f4e6372e87342513c35be64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101d05760003560e01c806395d89b41116100f7578063b5f522f711610095578063cc9ba58311610064578063cc9ba58314610670578063d0e30db01461069b578063dd62ed3e146106c6578063e8b5e51f14610703576101e0565b8063b5f522f7146105c5578063c10b935814610603578063c59ee1dc1461062e578063c8e569a814610659576101e0565b80639cbd7da5116100d15780639cbd7da51461051b5780639d76ea5814610532578063a9059cbb1461055d578063ab0bcc411461059a576101e0565b806395d89b411461049e5780639b19251a146104c95780639c08d549146104f2576101e0565b8063313ce5671161016f5780636d58c88f1161013e5780636d58c88f146103e257806370a082311461040b5780637ff9b596146104485780638ac2c68014610473576101e0565b8063313ce56714610336578063378aa70114610361578063401938831461038c578063481c6a75146103b7576101e0565b806308003f78116101ab57806308003f7814610266578063095ea7b31461029157806318160ddd146102ce57806323b872dd146102f9576101e0565b80622e1316146101e557806302d05d3f1461021057806306fdde031461023b576101e0565b366101e0576101dd610721565b50005b600080fd5b3480156101f157600080fd5b506101fa610d6d565b60405161020791906129ff565b60405180910390f35b34801561021c57600080fd5b50610225610d73565b6040516102329190612791565b60405180910390f35b34801561024757600080fd5b50610250610d99565b60405161025d919061285d565b60405180910390f35b34801561027257600080fd5b5061027b610dd2565b6040516102889190612827565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190612285565b610feb565b6040516102c59190612827565b60405180910390f35b3480156102da57600080fd5b506102e3611123565b6040516102f091906129ff565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190612236565b61112c565b60405161032d9190612827565b60405180910390f35b34801561034257600080fd5b5061034b611189565b60405161035891906129ff565b60405180910390f35b34801561036d57600080fd5b5061037661118f565b6040516103839190612842565b60405180910390f35b34801561039857600080fd5b506103a161126c565b6040516103ae91906129ff565b60405180910390f35b3480156103c357600080fd5b506103cc611272565b6040516103d99190612791565b60405180910390f35b3480156103ee57600080fd5b50610409600480360381019061040491906121d1565b611298565b005b34801561041757600080fd5b50610432600480360381019061042d91906121a8565b61136c565b60405161043f91906129ff565b60405180910390f35b34801561045457600080fd5b5061045d6113b5565b60405161046a91906129ff565b60405180910390f35b34801561047f57600080fd5b506104886113bb565b60405161049591906129ff565b60405180910390f35b3480156104aa57600080fd5b506104b36113c1565b6040516104c0919061285d565b60405180910390f35b3480156104d557600080fd5b506104f060048036038101906104eb91906121a8565b6113fa565b005b3480156104fe57600080fd5b5061051960048036038101906105149190612313565b6115a7565b005b34801561052757600080fd5b506105306117d4565b005b34801561053e57600080fd5b506105476119cf565b6040516105549190612791565b60405180910390f35b34801561056957600080fd5b50610584600480360381019061057f9190612285565b6119f5565b6040516105919190612827565b60405180910390f35b3480156105a657600080fd5b506105af611a50565b6040516105bc91906129ff565b60405180910390f35b3480156105d157600080fd5b506105ec60048036038101906105e791906122c1565b611a56565b6040516105fa9291906127c7565b60405180910390f35b34801561060f57600080fd5b50610618611aaa565b60405161062591906129ff565b60405180910390f35b34801561063a57600080fd5b50610643611ab0565b60405161065091906129ff565b60405180910390f35b34801561066557600080fd5b5061066e611ab6565b005b34801561067c57600080fd5b50610685611cb2565b60405161069291906129ff565b60405180910390f35b3480156106a757600080fd5b506106b0611cb8565b6040516106bd91906127ac565b60405180910390f35b3480156106d257600080fd5b506106ed60048036038101906106e891906121fa565b611cde565b6040516106fa91906129ff565b60405180910390f35b61070b610721565b6040516107189190612827565b60405180910390f35b600060011515600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad906128bf565b60405180910390fd5b6107be61118f565b601360006101000a81548160ff02191690836003811115610808577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060016003811115610847577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff16600381111561088f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c69061287f565b60405180910390fd5b600d5434101580156108e35750600e543411155b610922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610919906129bf565b60405180910390fd5b600c54600f541115610969576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109609061295f565b60405180910390fd5b34600f600082825461097b9190612a36565b9250508190555034600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109d19190612a36565b92505081905550600e54600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a53906128df565b60405180910390fd5b6000600b5434610a6c9190612a8c565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad857600080fd5b505afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1091906122ea565b905080821115610b49577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600860405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c419190612a36565b925050819055508160036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cb99190612abd565b92505081905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d28573d6000803e3d6000fd5b507f4ae4bd7655e0d350876a23cd90c4227b13db560e34435c6a488150a9c844bf5f333484604051610d5c939291906127f0565b60405180910390a160019250505090565b600e5481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600b81526020017f5a72696e43696e436f696e00000000000000000000000000000000000000000081525081565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5b9061299f565b60405180910390fd5b610e6c61118f565b601360006101000a81548160ff02191690836003811115610eb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060026003811115610ef5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115610f3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610f7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f74906128ff565b60405180910390fd5b600060036000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905090565b60003373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561102657600080fd5b6000821161103357600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161111191906129ff565b60405180910390a36001905092915050565b60008054905090565b60006012544211611172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111699061293f565b60405180910390fd5b61117d848484611d65565b50600190509392505050565b60015481565b60006003808111156111ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115611212577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156112215760039050611269565b6010544211158061123457506000601154145b156112425760009050611269565b601054421015801561125657506011544211155b156112645760019050611269565b600290505b90565b600c5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f9061299f565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b5481565b600d5481565b6040518060400160405280600381526020017f5a4343000000000000000000000000000000000000000000000000000000000081525081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114819061299f565b60405180910390fd5b600060038111156114c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff16600381111561150c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461154c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115439061297f565b60405180910390fd5b6001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162e9061299f565b60405180910390fd5b61163f61118f565b601360006101000a81548160ff02191690836003811115611689577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600060038111156116c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115611710577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611750576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611747906129df565b60405180910390fd5b42601081905550816010546117659190612a36565b601181905550806011546117799190612a36565b6012819055506001601360006101000a81548160ff021916908360038111156117cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185b9061299f565b60405180910390fd5b61186c61118f565b601360006101000a81548160ff021916908360038111156118b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506003808111156118f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff16600381111561193c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461197c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119739061291f565b60405180910390fd5b6001601360006101000a81548160ff021916908360038111156119c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006012544211611a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a329061293f565b60405180910390fd5b611a458383611feb565b506001905092915050565b60105481565b60088181548110611a6657600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60115481565b600f5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3d9061299f565b60405180910390fd5b611b4e61118f565b601360006101000a81548160ff02191690836003811115611b98577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060016003811115611bd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b601360009054906101000a900460ff166003811115611c1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c569061289f565b60405180910390fd5b6003601360006101000a81548160ff02191690836003811115611cab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b60125481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611db357600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611e3c57600080fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611e8b9190612abd565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ee19190612a36565b9250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611f749190612abd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611fd891906129ff565b60405180910390a3600190509392505050565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561203957600080fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120889190612abd565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120de9190612a36565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161214291906129ff565b60405180910390a36001905092915050565b60008135905061216381612c55565b92915050565b60008135905061217881612c6c565b92915050565b60008135905061218d81612c83565b92915050565b6000815190506121a281612c83565b92915050565b6000602082840312156121ba57600080fd5b60006121c884828501612154565b91505092915050565b6000602082840312156121e357600080fd5b60006121f184828501612169565b91505092915050565b6000806040838503121561220d57600080fd5b600061221b85828601612154565b925050602061222c85828601612154565b9150509250929050565b60008060006060848603121561224b57600080fd5b600061225986828701612154565b935050602061226a86828701612154565b925050604061227b8682870161217e565b9150509250925092565b6000806040838503121561229857600080fd5b60006122a685828601612154565b92505060206122b78582860161217e565b9150509250929050565b6000602082840312156122d357600080fd5b60006122e18482850161217e565b91505092915050565b6000602082840312156122fc57600080fd5b600061230a84828501612193565b91505092915050565b6000806040838503121561232657600080fd5b60006123348582860161217e565b92505060206123458582860161217e565b9150509250929050565b61235881612b03565b82525050565b61236781612af1565b82525050565b61237681612b15565b82525050565b61238581612b5e565b82525050565b600061239682612a1a565b6123a08185612a25565b93506123b0818560208601612b70565b6123b981612c30565b840191505092915050565b60006123d1601983612a25565b91507f4552524f523a2049434f206d75737420626520616374697665000000000000006000830152602082019050919050565b6000612411602d83612a25565b91507f4552524f523a2049434f20616c72656164792073746f70706564206f72206e6f60008301527f74207965742073746172746564000000000000000000000000000000000000006020830152604082019050919050565b6000612477602683612a25565b91507f4552524f523a204f6e6c7920617070726f76656420696e766573746f7273206160008301527f6c6c6f77656400000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124dd601e83612a25565b91507f4552524f523a204d617820696e766573746d656e7420657863656564656400006000830152602082019050919050565b600061251d601c83612a25565b91507f4552524f523a2049434f207374696c6c20696e2070726f6772657373000000006000830152602082019050919050565b600061255d602d83612a25565b91507f4552524f523a2049434f20616c72656164792072756e6e696e67206f72206e6f60008301527f74207965742073746172746564000000000000000000000000000000000000006020830152604082019050919050565b60006125c3602e83612a25565b91507f4552524f523a204c6f636b2d757020706572696f642c20746f6b656e73206e6f60008301527f742072656c6561736564207965740000000000000000000000000000000000006020830152604082019050919050565b6000612629601d83612a25565b91507f4552524f523a204e6f7420656e6f75676820746f6b656e73206c6566740000006000830152602082019050919050565b6000612669601383612a25565b91507f49434f20616c72656164792073746172746564000000000000000000000000006000830152602082019050919050565b60006126a9601b83612a25565b91507f4552524f523a204f6e6c79206d616e6167657220616c6c6f77656400000000006000830152602082019050919050565b60006126e9602183612a25565b91507f4552524f523a20416d6f756e7420746f6f206c6f77206f7220746f6f2068696760008301527f68000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061274f601a83612a25565b91507f4552524f523a2049434f20616c726561647920737461727465640000000000006000830152602082019050919050565b61278b81612b54565b82525050565b60006020820190506127a6600083018461235e565b92915050565b60006020820190506127c1600083018461234f565b92915050565b60006040820190506127dc600083018561234f565b6127e96020830184612782565b9392505050565b6000606082019050612805600083018661235e565b6128126020830185612782565b61281f6040830184612782565b949350505050565b600060208201905061283c600083018461236d565b92915050565b6000602082019050612857600083018461237c565b92915050565b60006020820190508181036000830152612877818461238b565b905092915050565b60006020820190508181036000830152612898816123c4565b9050919050565b600060208201905081810360008301526128b881612404565b9050919050565b600060208201905081810360008301526128d88161246a565b9050919050565b600060208201905081810360008301526128f8816124d0565b9050919050565b6000602082019050818103600083015261291881612510565b9050919050565b6000602082019050818103600083015261293881612550565b9050919050565b60006020820190508181036000830152612958816125b6565b9050919050565b600060208201905081810360008301526129788161261c565b9050919050565b600060208201905081810360008301526129988161265c565b9050919050565b600060208201905081810360008301526129b88161269c565b9050919050565b600060208201905081810360008301526129d8816126dc565b9050919050565b600060208201905081810360008301526129f881612742565b9050919050565b6000602082019050612a146000830184612782565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612a4182612b54565b9150612a4c83612b54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a8157612a80612ba3565b5b828201905092915050565b6000612a9782612b54565b9150612aa283612b54565b925082612ab257612ab1612bd2565b5b828204905092915050565b6000612ac882612b54565b9150612ad383612b54565b925082821015612ae657612ae5612ba3565b5b828203905092915050565b6000612afc82612b34565b9050919050565b6000612b0e82612b34565b9050919050565b60008115159050919050565b6000819050612b2f82612c41565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b6982612b21565b9050919050565b60005b83811015612b8e578082015181840152602081019050612b73565b83811115612b9d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60048110612c5257612c51612c01565b5b50565b612c5e81612af1565b8114612c6957600080fd5b50565b612c7581612b03565b8114612c8057600080fd5b50565b612c8c81612b54565b8114612c9757600080fd5b5056fea26469706673582212201dbacda9eb594617f76b0e0c22e4a8dedd4eab7625d800dd8086ad58ad3f9bed64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:861:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:88:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "88:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "103:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "97:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "88:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "154:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "119:34:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "119:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "119:41:3"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "56:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "64:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:3",
                "type": ""
              }
            ],
            "src": "7:159:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "257:215:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "303:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "315:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "305:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "305:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "305:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "278:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "287:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "299:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "270:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "270:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "267:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "329:136:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "344:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "348:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "373:82:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "427:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "438:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "423:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "423:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "447:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "383:39:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:72:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "373:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "227:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "238:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "250:6:3",
                "type": ""
              }
            ],
            "src": "172:300:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "541:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "570:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "552:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "541:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "513:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "523:7:3",
                "type": ""
              }
            ],
            "src": "478:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "658:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "665:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "654:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:3",
                "type": ""
              }
            ],
            "src": "588:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:87:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "836:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "838:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "838:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "838:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "794:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "801:25:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "801:32:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "791:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:43:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:51:3"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "764:5:3",
                "type": ""
              }
            ],
            "src": "720:138:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19425:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:3",
                "type": ""
              }
            ],
            "src": "7:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:95:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "231:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "260:34:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:41:3"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:3",
                "type": ""
              }
            ],
            "src": "152:155:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "365:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "375:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "397:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "384:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "375:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "440:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "413:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "413:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "413:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "343:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "351:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "359:5:3",
                "type": ""
              }
            ],
            "src": "313:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "521:80:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "531:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "546:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "540:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "540:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "531:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "589:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "562:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "499:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "507:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "515:5:3",
                "type": ""
              }
            ],
            "src": "458:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "673:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "719:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "728:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "731:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "721:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "721:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "721:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "694:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "703:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "690:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "690:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "686:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "686:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "683:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "745:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "760:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "774:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "764:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "789:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "824:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "835:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "820:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "820:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "799:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "799:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "789:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "643:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "654:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "666:6:3",
                "type": ""
              }
            ],
            "src": "607:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "949:204:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "995:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1004:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1007:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "997:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "997:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "997:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "970:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "979:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "966:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "966:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "959:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1021:125:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1036:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1050:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1040:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1065:71:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1108:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1119:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1104:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1104:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1128:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1075:28:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1075:61:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1065:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "919:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "930:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "942:6:3",
                "type": ""
              }
            ],
            "src": "875:278:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1242:324:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1288:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1297:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1300:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1290:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1290:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1290:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1263:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1272:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1259:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1259:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1284:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1255:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1255:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1252:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1314:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1329:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1343:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1333:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1358:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1393:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1404:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1389:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1389:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1368:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1368:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1358:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1441:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1456:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1470:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1460:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1486:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1521:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1532:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1517:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1517:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1541:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1496:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1486:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1204:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1215:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1227:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1235:6:3",
                "type": ""
              }
            ],
            "src": "1159:407:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1672:452:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1718:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1727:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1730:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1720:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1720:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1720:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1693:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1702:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1689:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1689:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1714:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1685:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1685:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1682:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1744:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1759:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1773:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1763:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1788:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1823:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1834:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1819:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1819:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1843:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1798:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1798:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1788:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1871:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1886:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1900:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1890:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1916:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1951:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1962:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1947:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1947:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1971:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1926:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1916:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1999:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2014:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2028:2:3",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2018:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2044:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2079:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2090:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2075:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2075:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2099:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2054:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2044:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1626:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1637:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1649:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1657:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1665:6:3",
                "type": ""
              }
            ],
            "src": "1572:552:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2213:324:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2259:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2268:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2271:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2261:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2261:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2261:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2234:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2243:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2230:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2230:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2255:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2226:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2223:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2285:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2300:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2314:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2304:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2329:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2364:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2375:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2360:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2360:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2384:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2339:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2339:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2329:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2412:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2427:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2441:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2431:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2457:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2492:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2503:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2488:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2488:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2512:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2467:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2467:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2457:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2175:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2186:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2198:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2206:6:3",
                "type": ""
              }
            ],
            "src": "2130:407:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2609:196:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2655:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2664:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2667:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2657:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2657:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2657:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2630:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2639:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2626:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2626:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2622:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2622:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2619:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2681:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2696:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2710:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2700:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2725:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2760:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2771:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2756:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2756:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2780:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2735:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2735:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2725:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2579:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2590:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2602:6:3",
                "type": ""
              }
            ],
            "src": "2543:262:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2888:207:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2934:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2943:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2946:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2936:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2936:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2936:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2909:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2918:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2905:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2905:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2930:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2901:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "2898:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2960:128:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2975:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2989:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2979:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3004:74:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3050:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3061:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3046:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3046:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3070:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3014:31:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:64:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3004:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2858:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2869:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2881:6:3",
                "type": ""
              }
            ],
            "src": "2811:284:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3184:324:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3230:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3239:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3242:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3232:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3232:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3232:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3205:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3214:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3201:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3201:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3226:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3197:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "3194:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3256:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3271:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3285:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3275:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3300:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3335:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3346:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3331:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3331:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3355:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3310:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3310:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3300:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3383:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3398:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3412:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3402:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3428:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3463:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3474:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3459:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3459:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3483:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3438:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3438:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3428:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3146:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3157:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3169:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3177:6:3",
                "type": ""
              }
            ],
            "src": "3101:407:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3595:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3612:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3643:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3617:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3617:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3605:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3605:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3583:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3590:3:3",
                "type": ""
              }
            ],
            "src": "3514:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3727:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3744:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3767:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3749:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3737:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3737:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3715:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3722:3:3",
                "type": ""
              }
            ],
            "src": "3662:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3845:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3862:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3882:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3867:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3867:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3855:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3855:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3833:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3840:3:3",
                "type": ""
              }
            ],
            "src": "3786:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3972:72:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3989:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4031:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$52_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3994:36:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3994:43:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3982:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3982:56:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3982:56:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$52_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3960:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3967:3:3",
                "type": ""
              }
            ],
            "src": "3901:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4142:272:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4152:53:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4199:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4166:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4166:39:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4156:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4214:78:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4280:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4285:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4221:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4221:71:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4214:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4327:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4334:4:3",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4323:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4323:16:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4341:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4346:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4301:21:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4362:46:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4373:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4400:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4378:21:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4378:29:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4369:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4369:39:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4362:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4123:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4130:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4138:3:3",
                "type": ""
              }
            ],
            "src": "4050:364:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4566:177:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4576:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4642:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4647:2:3",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4583:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4583:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4576:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4671:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4676:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4667:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4667:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4680:27:3",
                        "type": "",
                        "value": "ERROR: ICO must be active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4660:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4660:48:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4660:48:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4718:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4729:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4734:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4725:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4725:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4718:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4554:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4562:3:3",
                "type": ""
              }
            ],
            "src": "4420:323:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4895:231:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4905:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4971:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4976:2:3",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4912:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4912:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4905:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5000:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5005:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4996:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4996:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5009:34:3",
                        "type": "",
                        "value": "ERROR: ICO already stopped or no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4989:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4989:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4989:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5065:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5070:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5061:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5061:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5075:15:3",
                        "type": "",
                        "value": "t yet started"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5054:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5054:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5054:37:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5101:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5112:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5117:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5108:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5108:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5101:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4883:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4891:3:3",
                "type": ""
              }
            ],
            "src": "4749:377:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5278:224:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5288:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5354:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5359:2:3",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5295:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5288:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5383:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5388:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5379:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5379:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5392:34:3",
                        "type": "",
                        "value": "ERROR: Only approved investors a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5372:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5372:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5448:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5453:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5444:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5444:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5458:8:3",
                        "type": "",
                        "value": "llowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5437:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5437:30:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5437:30:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5477:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5488:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5493:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5484:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5484:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5477:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5266:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5274:3:3",
                "type": ""
              }
            ],
            "src": "5132:370:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5654:182:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5664:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5730:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5735:2:3",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5671:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5671:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5664:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5759:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5764:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5755:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5755:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5768:32:3",
                        "type": "",
                        "value": "ERROR: Max investment exceeded"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5748:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5748:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5748:53:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5811:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5822:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5827:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5818:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5818:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5811:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5642:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5650:3:3",
                "type": ""
              }
            ],
            "src": "5508:328:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5988:180:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5998:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6064:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6069:2:3",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6005:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6005:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5998:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6093:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6098:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6089:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6089:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6102:30:3",
                        "type": "",
                        "value": "ERROR: ICO still in progress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6082:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6082:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6082:51:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6143:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6154:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6159:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6150:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6150:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6143:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5976:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5984:3:3",
                "type": ""
              }
            ],
            "src": "5842:326:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6320:231:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6330:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6396:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6401:2:3",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6337:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6337:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6330:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6425:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6430:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6421:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6421:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6434:34:3",
                        "type": "",
                        "value": "ERROR: ICO already running or no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6414:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6414:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6414:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6490:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6495:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6486:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6486:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6500:15:3",
                        "type": "",
                        "value": "t yet started"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6479:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6479:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6479:37:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6526:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6537:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6542:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6533:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6533:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6526:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6308:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6316:3:3",
                "type": ""
              }
            ],
            "src": "6174:377:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6703:232:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6713:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6779:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6784:2:3",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6720:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6713:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6808:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6813:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6804:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6804:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6817:34:3",
                        "type": "",
                        "value": "ERROR: Lock-up period, tokens no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6797:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6797:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6797:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6873:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6878:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6869:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6869:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6883:16:3",
                        "type": "",
                        "value": "t released yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6862:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:38:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:38:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6910:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6921:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6926:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6917:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6917:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6910:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6691:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6699:3:3",
                "type": ""
              }
            ],
            "src": "6557:378:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7087:181:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7097:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7163:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7168:2:3",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7104:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7104:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7097:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7192:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7197:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7188:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7188:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7201:31:3",
                        "type": "",
                        "value": "ERROR: Not enough tokens left"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7181:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7181:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7181:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7243:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7254:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7259:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7250:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7250:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7243:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7075:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7083:3:3",
                "type": ""
              }
            ],
            "src": "6941:327:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7420:171:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7430:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7496:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7501:2:3",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7437:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7430:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7525:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7530:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7521:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7521:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7534:21:3",
                        "type": "",
                        "value": "ICO already started"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7514:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7514:42:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7514:42:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7566:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7577:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7582:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7573:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7566:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7408:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7416:3:3",
                "type": ""
              }
            ],
            "src": "7274:317:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7743:179:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7753:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7819:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7824:2:3",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7760:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7760:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7753:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7848:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7853:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7844:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7844:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7857:29:3",
                        "type": "",
                        "value": "ERROR: Only manager allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7837:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7837:50:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7837:50:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7897:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7908:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7913:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7904:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7904:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7897:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7731:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7739:3:3",
                "type": ""
              }
            ],
            "src": "7597:325:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8074:219:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8084:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8150:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8155:2:3",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8091:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8091:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8084:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8179:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8184:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8175:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8175:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8188:34:3",
                        "type": "",
                        "value": "ERROR: Amount too low or too hig"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8168:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8168:55:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8168:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8244:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8249:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8240:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8240:12:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8254:3:3",
                        "type": "",
                        "value": "h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8233:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8233:25:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8233:25:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8268:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8279:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8284:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8275:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8275:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8268:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8062:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8070:3:3",
                "type": ""
              }
            ],
            "src": "7928:365:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8445:178:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8455:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8521:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8526:2:3",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8462:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8462:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8455:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8550:3:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8555:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8546:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8546:11:3"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8559:28:3",
                        "type": "",
                        "value": "ERROR: ICO already started"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8539:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8539:49:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8539:49:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8598:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8609:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8614:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8605:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8605:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8598:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8433:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8441:3:3",
                "type": ""
              }
            ],
            "src": "8299:324:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8694:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8711:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8734:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8716:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8716:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8704:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8704:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8682:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8689:3:3",
                "type": ""
              }
            ],
            "src": "8629:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8851:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8861:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8873:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8884:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8869:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8869:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8861:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8941:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8954:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8965:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8950:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8950:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8897:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8897:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8897:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8823:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8835:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8846:4:3",
                "type": ""
              }
            ],
            "src": "8753:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9095:140:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9105:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9117:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9128:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9113:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9113:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9105:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9201:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9214:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9225:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9210:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9210:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9141:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9141:87:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9141:87:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9067:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9079:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9090:4:3",
                "type": ""
              }
            ],
            "src": "8981:254:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9383:222:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9393:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9405:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9416:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9401:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9401:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9393:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9489:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9502:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9513:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9498:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9498:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9429:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9429:87:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9429:87:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9570:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9583:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9594:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9579:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9579:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9526:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9526:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9526:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9347:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9359:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9367:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9378:4:3",
                "type": ""
              }
            ],
            "src": "9241:364:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9765:288:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9775:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9787:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9798:2:3",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9783:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9783:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9775:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9855:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9868:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9879:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9864:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9864:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9811:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9811:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9811:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9936:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9949:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9960:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9945:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9945:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9892:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9892:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9892:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10018:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10031:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10042:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10027:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10027:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9974:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9974:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9974:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9721:9:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9733:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9741:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9749:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9760:4:3",
                "type": ""
              }
            ],
            "src": "9611:442:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10151:118:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10161:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10173:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10184:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10169:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10169:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10161:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10235:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10248:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10259:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10244:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10244:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10197:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10197:65:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10197:65:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10123:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10135:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10146:4:3",
                "type": ""
              }
            ],
            "src": "10059:210:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10379:130:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10389:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10401:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10412:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10397:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10397:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10389:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10475:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10488:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10499:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10484:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10484:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$52_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10425:49:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10425:77:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10425:77:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$52__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10351:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10363:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10374:4:3",
                "type": ""
              }
            ],
            "src": "10275:234:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10633:195:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10643:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10655:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10666:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10651:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10651:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10643:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10690:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10701:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10686:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10686:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10709:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10715:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10705:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10705:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10679:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10679:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10679:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10735:86:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10807:6:3"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10816:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10743:63:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10743:78:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10735:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10605:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10617:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10628:4:3",
                "type": ""
              }
            ],
            "src": "10515:313:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11005:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11015:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11027:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11038:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11023:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11023:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11015:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11062:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11073:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11058:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11058:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11081:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11087:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11077:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11077:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11051:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11051:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11051:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11107:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11241:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11115:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11115:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11107:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10985:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11000:4:3",
                "type": ""
              }
            ],
            "src": "10834:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11430:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11440:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11452:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11463:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11448:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11448:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11440:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11487:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11498:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11483:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11483:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11506:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11512:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11502:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11502:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11476:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11476:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11476:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11532:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11666:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11540:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11540:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11532:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11410:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11425:4:3",
                "type": ""
              }
            ],
            "src": "11259:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11855:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11865:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11877:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11888:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11873:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11873:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11865:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11912:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11923:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11908:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11908:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11931:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11937:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11927:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11927:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11901:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11901:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11901:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11957:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12091:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11965:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11965:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11957:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11835:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11850:4:3",
                "type": ""
              }
            ],
            "src": "11684:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12280:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12290:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12302:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12313:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12298:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12298:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12290:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12337:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12348:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12333:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12333:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12356:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12362:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12352:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12352:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12326:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12326:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12326:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12382:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12516:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12390:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12390:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12382:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12260:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12275:4:3",
                "type": ""
              }
            ],
            "src": "12109:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12705:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12715:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12727:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12738:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12723:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12723:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12715:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12762:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12773:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12758:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12758:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12781:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12787:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12777:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12777:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12751:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12751:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12751:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12807:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12941:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12815:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12815:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12807:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12685:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12700:4:3",
                "type": ""
              }
            ],
            "src": "12534:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13130:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13140:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13152:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13163:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13148:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13148:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13140:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13187:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13198:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13183:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13183:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13206:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13212:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13202:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13202:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13176:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13176:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13176:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13232:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13366:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13240:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13240:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13232:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13110:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13125:4:3",
                "type": ""
              }
            ],
            "src": "12959:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13555:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13565:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13577:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13588:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13573:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13573:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13565:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13612:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13623:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13608:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13608:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13631:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13637:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13627:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13627:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13601:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13601:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13601:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13657:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13791:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13665:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13665:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13657:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13535:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13550:4:3",
                "type": ""
              }
            ],
            "src": "13384:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13980:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13990:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14002:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14013:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13998:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13998:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13990:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14037:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14048:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14033:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14033:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14056:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14062:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14052:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14052:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14026:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14026:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14026:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14082:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14216:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14090:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14090:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14082:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13960:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13975:4:3",
                "type": ""
              }
            ],
            "src": "13809:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14405:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14415:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14427:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14438:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14423:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14423:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14415:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14462:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14473:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14458:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14458:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14481:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14487:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14477:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14477:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14451:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14451:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14451:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14507:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14641:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14515:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14515:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14507:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14385:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14400:4:3",
                "type": ""
              }
            ],
            "src": "14234:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14830:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14840:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14852:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14863:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14848:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14848:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14840:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14887:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14898:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14883:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14883:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14906:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14912:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14902:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14902:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14876:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14876:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14876:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14932:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15066:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14940:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14940:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14932:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14810:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14825:4:3",
                "type": ""
              }
            ],
            "src": "14659:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15255:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15265:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15277:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15288:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15273:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15273:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15265:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15312:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15323:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15308:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15308:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15331:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15337:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15327:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15327:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15301:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15301:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15301:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15357:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15491:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15365:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15365:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15357:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15235:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15250:4:3",
                "type": ""
              }
            ],
            "src": "15084:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15680:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15690:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15702:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15713:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15698:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15698:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15690:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15737:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15748:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15733:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15733:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15756:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15762:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15752:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15752:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15726:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15726:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15726:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15782:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15916:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15790:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15790:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15782:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15660:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15675:4:3",
                "type": ""
              }
            ],
            "src": "15509:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16032:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16042:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16054:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16065:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16050:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16050:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16042:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16122:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16135:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16146:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16131:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16131:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16078:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16078:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16078:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16004:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16016:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16027:4:3",
                "type": ""
              }
            ],
            "src": "15934:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16221:40:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16232:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16248:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16242:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16242:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "16232:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16204:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16214:6:3",
                "type": ""
              }
            ],
            "src": "16162:99:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16363:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16380:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16385:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16373:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16373:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16373:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16401:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16420:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16425:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16416:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16416:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "16401:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16335:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16340:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "16351:11:3",
                "type": ""
              }
            ],
            "src": "16267:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16486:261:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16496:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16519:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16501:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16501:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16496:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16530:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16553:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16535:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16535:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16530:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16693:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16695:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16695:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16695:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16614:1:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16621:66:3",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16689:1:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16617:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16617:74:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16611:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16611:81:3"
                  },
                  "nodeType": "YulIf",
                  "src": "16608:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16725:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16736:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16739:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16732:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16732:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "16725:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16473:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16476:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16482:3:3",
                "type": ""
              }
            ],
            "src": "16442:305:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16795:143:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16805:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16828:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16810:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16810:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16805:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16839:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16862:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16844:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16844:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16839:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16886:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "16888:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16888:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16888:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16883:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16876:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16876:9:3"
                  },
                  "nodeType": "YulIf",
                  "src": "16873:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16918:14:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16927:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16930:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "16923:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16923:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "16918:1:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16784:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16787:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "16793:1:3",
                "type": ""
              }
            ],
            "src": "16753:185:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16989:146:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16999:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17022:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17004:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17004:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16999:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17033:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17056:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17038:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17038:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17033:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17080:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17082:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17082:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17082:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17074:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17077:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17071:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17071:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "17068:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17112:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17124:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17127:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17120:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17120:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17112:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16975:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16978:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "16984:4:3",
                "type": ""
              }
            ],
            "src": "16944:191:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17186:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17196:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17225:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "17207:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17207:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17196:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17168:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17178:7:3",
                "type": ""
              }
            ],
            "src": "17141:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17296:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17306:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17335:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "17317:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17317:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17306:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17278:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17288:7:3",
                "type": ""
              }
            ],
            "src": "17243:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17395:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17405:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17430:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17423:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17423:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17416:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17416:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17405:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17377:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17387:7:3",
                "type": ""
              }
            ],
            "src": "17353:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17502:74:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17512:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17523:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17512:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17564:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$52",
                      "nodeType": "YulIdentifier",
                      "src": "17529:34:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17529:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17529:41:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$52",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17484:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17494:7:3",
                "type": ""
              }
            ],
            "src": "17449:127:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17627:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17637:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17652:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17659:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "17648:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17648:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17637:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17609:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17619:7:3",
                "type": ""
              }
            ],
            "src": "17582:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17759:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17769:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17780:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "17769:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17741:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "17751:7:3",
                "type": ""
              }
            ],
            "src": "17714:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17863:61:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17873:45:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17912:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$52",
                      "nodeType": "YulIdentifier",
                      "src": "17886:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17886:32:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "17873:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$52_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17843:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "17853:9:3",
                "type": ""
              }
            ],
            "src": "17797:127:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17979:258:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17989:10:3",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17998:1:3",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "17993:1:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18058:63:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "18083:3:3"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "18088:1:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "18079:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18079:11:3"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "18102:3:3"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "18107:1:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "18098:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18098:11:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "18092:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18092:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18072:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18072:39:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18072:39:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18019:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18022:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "18016:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18016:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "18030:19:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18032:15:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "18041:1:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18044:2:3",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18037:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18037:10:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "18032:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "18012:3:3",
                    "statements": []
                  },
                  "src": "18008:113:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18155:76:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "18205:3:3"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "18210:6:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "18201:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18201:16:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18219:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18194:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18194:27:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18194:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "18136:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18139:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18133:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18133:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "18130:2:3"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "17961:3:3",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "17966:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "17971:6:3",
                "type": ""
              }
            ],
            "src": "17930:307:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18271:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18288:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18291:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18281:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18281:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18281:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18385:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18388:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18378:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18378:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18378:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18409:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18412:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18402:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18402:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18402:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18243:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18457:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18474:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18477:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18467:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18467:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18467:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18571:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18574:4:3",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18564:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18564:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18564:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18595:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18598:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18588:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18588:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18588:15:3"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "18429:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18643:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18660:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18663:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18653:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18653:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18653:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18757:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18760:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18750:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18750:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18750:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18781:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18784:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18774:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18774:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18774:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "18615:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18849:54:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18859:38:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18877:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18884:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18873:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18873:14:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18893:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "18889:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18889:7:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18869:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18869:28:3"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "18859:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18832:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "18842:6:3",
                "type": ""
              }
            ],
            "src": "18801:102:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18960:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18994:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "18996:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18996:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18996:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18983:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18990:1:3",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "18980:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18980:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18973:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18973:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "18970:2:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$52",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18953:5:3",
                "type": ""
              }
            ],
            "src": "18909:113:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19071:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19128:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19137:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19140:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19130:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19130:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19130:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19094:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19119:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "19101:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19101:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19091:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19091:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19084:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19084:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19081:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19064:5:3",
                "type": ""
              }
            ],
            "src": "19028:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19207:87:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19272:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19281:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19284:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19274:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19274:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19274:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19230:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19263:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "19237:25:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19237:32:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19227:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19227:43:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19220:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19220:51:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19217:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19200:5:3",
                "type": ""
              }
            ],
            "src": "19156:138:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19343:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19400:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19409:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19412:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19402:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19402:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19402:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19366:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19391:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "19373:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19373:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19363:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19363:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19356:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19356:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "19353:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19336:5:3",
                "type": ""
              }
            ],
            "src": "19300:122:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_State_$52_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$52_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n\n        mstore(add(pos, 0), \"ERROR: ICO must be active\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n\n        mstore(add(pos, 0), \"ERROR: ICO already stopped or no\")\n\n        mstore(add(pos, 32), \"t yet started\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"ERROR: Only approved investors a\")\n\n        mstore(add(pos, 32), \"llowed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"ERROR: Max investment exceeded\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n\n        mstore(add(pos, 0), \"ERROR: ICO still in progress\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n\n        mstore(add(pos, 0), \"ERROR: ICO already running or no\")\n\n        mstore(add(pos, 32), \"t yet started\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n\n        mstore(add(pos, 0), \"ERROR: Lock-up period, tokens no\")\n\n        mstore(add(pos, 32), \"t released yet\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"ERROR: Not enough tokens left\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"ICO already started\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n\n        mstore(add(pos, 0), \"ERROR: Only manager allowed\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"ERROR: Amount too low or too hig\")\n\n        mstore(add(pos, 32), \"h\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"ERROR: ICO already started\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_State_$52__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$52_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_State_$52(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$52(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_State_$52_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$52(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_State_$52(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "90:4901:0:-:0;;;251:12:2;227:36;;331:1;308:24;;486:10:0;461:35;;524:10;505:29;;596:9;568:37;;640:8;612:36;;1141:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;512:10:2;502:7;;:20;;;;;;;;;;;;;;;;;;553:16;;533:8;:17;542:7;;;;;;;;;;;533:17;;;;;;;;;;;;;;;:36;;;;1200:10:0;1190:7;;:20;;;;;;;;;;;;;;;;;;1231:8;1221:7;;:18;;;;;;;;;;;;;;;;;;1261:17;1250:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1289:12;;:41;;;;;;;;;;;;;;;;;;1141:197;90:4901;;;;;;;;;;:::o;7:159:3:-;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;90:4901:0:-;;;;;;;",
  "deployedSourceMap": "90:4901:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:8;:6;:8::i;:::-;;90:4901;;;;;612:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:22:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;133:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4726:262:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1322:305:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;589:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3390:305:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:24:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3703:429:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;505:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;131:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4597:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;698:131:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:35:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;568:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;183::2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1450:185:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1643:362;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4368:221;;;;;;;;;;;;;:::i;:::-;;197:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3101:281;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;687:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:19;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;715;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4140:219;;;;;;;;;;;;;:::i;:::-;;744:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1151:163:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2080:1013:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2136:12;1066:4;1033:37;;:17;:29;1051:10;1033:29;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1025:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2173:17:::1;:15;:17::i;:::-;2162:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2221:13;2209:25;;;;;;;;;;;;;;;;:8;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;2201:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2296:13;;2283:9;:26;;:56;;;;;2326:13;;2313:9;:26;;2283:56;2275:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2414:4;;2398:12;;:20;;2390:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2479:9;2463:12;;:25;;;;;;;:::i;:::-;;;;;;;;2539:9;2509:14;:26;2524:10;2509:26;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;2597:13;;2567:14;:26;2582:10;2567:26;;;;;;;;;;;;;;;;:43;;2559:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2665:11;2691:10;;2679:9;:22;;;;:::i;:::-;2665:36;;2712:16;2743:12;;;;;;;;;;;2731:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2712:58;;2798:11;2788:6;:21;;2781:29;;;;;;;;;;;;2823:5;2834:33;;;;;;;;2847:10;2834:33;;;;;;2860:6;2834:33;;::::0;2823:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2906:6;2882:8;:20;2891:10;2882:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2944:6;2923:8;:17;2932:7;;;;;;;;;;;2923:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;2962:7;;;;;;;;;;;:16;;:27;2979:9;2962:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3016:37;3023:10;3035:9;3046:6;3016:37;;;;;;;;:::i;:::-;;;;;;;;3081:4;3074:11;;;;2080:1013:::0;:::o;612:36::-;;;;:::o;344:22:2:-;;;;;;;;;;;;;:::o;133:43::-;;;;;;;;;;;;;;;;;;;:::o;4726:262:0:-;4778:12;922:7;;;;;;;;;;;908:21;;:10;:21;;;900:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4814:17:::1;:15;:17::i;:::-;4803:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4862:11;4850:23;;;;;;;;;;;;;;;;:8;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;4842:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4947:1;4927:8;:17;4936:7;;;;;;;;;;;4927:17;;;;;;;;;;;;;;;:21;;;;4976:4;4969:11;;4726:262:::0;:::o;1322:305:2:-;1396:12;1441:10;1429:22;;:8;:22;;;;1421:31;;;;;;1481:1;1471:7;:11;1463:20;;;;;;1531:7;1496:10;:22;1507:10;1496:22;;;;;;;;;;;;;;;:32;1519:8;1496:32;;;;;;;;;;;;;;;:42;;;;1577:8;1556:39;;1565:10;1556:39;;;1587:7;1556:39;;;;;;:::i;:::-;;;;;;;;1615:4;1608:11;;1322:305;;;;:::o;589:101::-;642:4;666:16;;659:23;;589:101;:::o;3390:305:0:-;3479:12;3530:15;;3512;:33;3504:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3617:45;3642:5;3649:3;3654:7;3617:24;:45::i;:::-;;3683:4;3676:11;;3390:305;;;;;:::o;308:24:2:-;;;;:::o;3703:429:0:-;3751:5;3785:15;3773:27;;;;;;;;;;;;;;;;:8;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;3769:356;;;3823:15;3816:22;;;;3769:356;3879:9;;3860:15;:28;;:44;;;;3903:1;3892:7;;:12;3860:44;3856:269;;;3928:17;3921:24;;;;3856:269;3986:9;;3967:15;:28;;:58;;;;;4018:7;;3999:15;:26;;3967:58;3963:162;;;4049:13;4042:20;;;;3963:162;4102:11;4095:18;;3703:429;;:::o;505:29::-;;;;:::o;131:22::-;;;;;;;;;;;;;:::o;4597:120::-;922:7;;;;;;;;;;;908:21;;:10;:21;;;900:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4698:11:::1;4688:7;;:21;;;;;;;;;;;;;;;;;;4597:120:::0;:::o;698:131:2:-;768:12;800:8;:21;809:11;800:21;;;;;;;;;;;;;;;;793:28;;698:131;;;:::o;461:35:0:-;;;;:::o;568:37::-;;;;:::o;183::2:-;;;;;;;;;;;;;;;;;;;:::o;1450:185:0:-;922:7;;;;;;;;;;;908:21;;:10;:21;;;900:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1540:17:::1;1528:29;;;;;;;;;;;;;;;;:8;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;1520:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1623:4;1592:17;:28;1610:9;1592:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1450:185:::0;:::o;1643:362::-;922:7;;;;;;;;;;;908:21;;:10;:21;;;900:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1739:17:::1;:15;:17::i;:::-;1728:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:17;1775:29;;;;;;;;;;;;;;;;:8;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;1767:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1857:15;1845:9;:27;;;;1904:9;1892;;:21;;;;:::i;:::-;1882:7;:31;;;;1951:13;1941:7;;:23;;;;:::i;:::-;1923:15;:41;;;;1985:13;1974:8;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1643:362:::0;;:::o;4368:221::-;922:7;;;;;;;;;;;908:21;;:10;:21;;;900:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4432:17:::1;:15;:17::i;:::-;4421:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4481:15;4469:27:::0;::::1;;;;;;;;;;;;;;;:8;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;4461:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4568:13;4557:8;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4368:221::o:0;197:27::-;;;;;;;;;;;;;:::o;3101:281::-;3171:12;3222:15;;3204;:33;3196:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;3307:34;3328:3;3333:7;3307:20;:34::i;:::-;;3370:4;3363:11;;3101:281;;;;:::o;687:21::-;;;;:::o;320:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;715:::-;;;;:::o;655:24::-;;;;:::o;4140:219::-;922:7;;;;;;;;;;;908:21;;:10;:21;;;900:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4202:17:::1;:15;:17::i;:::-;4191:8;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4251:13;4239:25;;;;;;;;;;;;;;;;:8;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;4231:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;4336:15;4325:8;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:219::o:0;744:27::-;;;;:::o;160:30::-;;;;;;;;;;;;;:::o;1151:163:2:-;1239:14;1273:10;:23;1284:11;1273:23;;;;;;;;;;;;;;;:33;1297:8;1273:33;;;;;;;;;;;;;;;;1266:40;;1151:163;;;;:::o;1635:426::-;1732:12;1784:7;1765:8;:15;1774:5;1765:15;;;;;;;;;;;;;;;;:26;;1757:35;;;;;;1844:7;1811:10;:17;1822:5;1811:17;;;;;;;;;;;;;;;:29;1829:10;1811:29;;;;;;;;;;;;;;;;:40;;1803:49;;;;;;1884:7;1865:8;:15;1874:5;1865:15;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1919:7;1902:8;:13;1911:3;1902:13;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1970:7;1937:10;:17;1948:5;1937:17;;;;;;;;;;;;;;;:29;1955:10;1937:29;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;2016:3;1995:34;;2004:10;1995:34;;;2021:7;1995:34;;;;;;:::i;:::-;;;;;;;;2049:4;2042:11;;1635:426;;;;;:::o;837:306::-;915:12;972:7;948:8;:20;957:10;948:20;;;;;;;;;;;;;;;;:31;;940:40;;;;;;1017:7;993:8;:20;1002:10;993:20;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;1052:7;1035:8;:13;1044:3;1035:13;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;1098:3;1077:34;;1086:10;1077:34;;;1103:7;1077:34;;;;;;:::i;:::-;;;;;;;;1131:4;1124:11;;837:306;;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:139::-;;397:6;384:20;375:29;;413:33;440:5;413:33;:::i;:::-;365:87;;;;:::o;458:143::-;;546:6;540:13;531:22;;562:33;589:5;562:33;:::i;:::-;521:80;;;;:::o;607:262::-;;715:2;703:9;694:7;690:23;686:32;683:2;;;731:1;728;721:12;683:2;774:1;799:53;844:7;835:6;824:9;820:22;799:53;:::i;:::-;789:63;;745:117;673:196;;;;:::o;875:278::-;;991:2;979:9;970:7;966:23;962:32;959:2;;;1007:1;1004;997:12;959:2;1050:1;1075:61;1128:7;1119:6;1108:9;1104:22;1075:61;:::i;:::-;1065:71;;1021:125;949:204;;;;:::o;1159:407::-;;;1284:2;1272:9;1263:7;1259:23;1255:32;1252:2;;;1300:1;1297;1290:12;1252:2;1343:1;1368:53;1413:7;1404:6;1393:9;1389:22;1368:53;:::i;:::-;1358:63;;1314:117;1470:2;1496:53;1541:7;1532:6;1521:9;1517:22;1496:53;:::i;:::-;1486:63;;1441:118;1242:324;;;;;:::o;1572:552::-;;;;1714:2;1702:9;1693:7;1689:23;1685:32;1682:2;;;1730:1;1727;1720:12;1682:2;1773:1;1798:53;1843:7;1834:6;1823:9;1819:22;1798:53;:::i;:::-;1788:63;;1744:117;1900:2;1926:53;1971:7;1962:6;1951:9;1947:22;1926:53;:::i;:::-;1916:63;;1871:118;2028:2;2054:53;2099:7;2090:6;2079:9;2075:22;2054:53;:::i;:::-;2044:63;;1999:118;1672:452;;;;;:::o;2130:407::-;;;2255:2;2243:9;2234:7;2230:23;2226:32;2223:2;;;2271:1;2268;2261:12;2223:2;2314:1;2339:53;2384:7;2375:6;2364:9;2360:22;2339:53;:::i;:::-;2329:63;;2285:117;2441:2;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2412:118;2213:324;;;;;:::o;2543:262::-;;2651:2;2639:9;2630:7;2626:23;2622:32;2619:2;;;2667:1;2664;2657:12;2619:2;2710:1;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2681:117;2609:196;;;;:::o;2811:284::-;;2930:2;2918:9;2909:7;2905:23;2901:32;2898:2;;;2946:1;2943;2936:12;2898:2;2989:1;3014:64;3070:7;3061:6;3050:9;3046:22;3014:64;:::i;:::-;3004:74;;2960:128;2888:207;;;;:::o;3101:407::-;;;3226:2;3214:9;3205:7;3201:23;3197:32;3194:2;;;3242:1;3239;3232:12;3194:2;3285:1;3310:53;3355:7;3346:6;3335:9;3331:22;3310:53;:::i;:::-;3300:63;;3256:117;3412:2;3438:53;3483:7;3474:6;3463:9;3459:22;3438:53;:::i;:::-;3428:63;;3383:118;3184:324;;;;;:::o;3514:142::-;3617:32;3643:5;3617:32;:::i;:::-;3612:3;3605:45;3595:61;;:::o;3662:118::-;3749:24;3767:5;3749:24;:::i;:::-;3744:3;3737:37;3727:53;;:::o;3786:109::-;3867:21;3882:5;3867:21;:::i;:::-;3862:3;3855:34;3845:50;;:::o;3901:143::-;3994:43;4031:5;3994:43;:::i;:::-;3989:3;3982:56;3972:72;;:::o;4050:364::-;;4166:39;4199:5;4166:39;:::i;:::-;4221:71;4285:6;4280:3;4221:71;:::i;:::-;4214:78;;4301:52;4346:6;4341:3;4334:4;4327:5;4323:16;4301:52;:::i;:::-;4378:29;4400:6;4378:29;:::i;:::-;4373:3;4369:39;4362:46;;4142:272;;;;;:::o;4420:323::-;;4583:67;4647:2;4642:3;4583:67;:::i;:::-;4576:74;;4680:27;4676:1;4671:3;4667:11;4660:48;4734:2;4729:3;4725:12;4718:19;;4566:177;;;:::o;4749:377::-;;4912:67;4976:2;4971:3;4912:67;:::i;:::-;4905:74;;5009:34;5005:1;5000:3;4996:11;4989:55;5075:15;5070:2;5065:3;5061:12;5054:37;5117:2;5112:3;5108:12;5101:19;;4895:231;;;:::o;5132:370::-;;5295:67;5359:2;5354:3;5295:67;:::i;:::-;5288:74;;5392:34;5388:1;5383:3;5379:11;5372:55;5458:8;5453:2;5448:3;5444:12;5437:30;5493:2;5488:3;5484:12;5477:19;;5278:224;;;:::o;5508:328::-;;5671:67;5735:2;5730:3;5671:67;:::i;:::-;5664:74;;5768:32;5764:1;5759:3;5755:11;5748:53;5827:2;5822:3;5818:12;5811:19;;5654:182;;;:::o;5842:326::-;;6005:67;6069:2;6064:3;6005:67;:::i;:::-;5998:74;;6102:30;6098:1;6093:3;6089:11;6082:51;6159:2;6154:3;6150:12;6143:19;;5988:180;;;:::o;6174:377::-;;6337:67;6401:2;6396:3;6337:67;:::i;:::-;6330:74;;6434:34;6430:1;6425:3;6421:11;6414:55;6500:15;6495:2;6490:3;6486:12;6479:37;6542:2;6537:3;6533:12;6526:19;;6320:231;;;:::o;6557:378::-;;6720:67;6784:2;6779:3;6720:67;:::i;:::-;6713:74;;6817:34;6813:1;6808:3;6804:11;6797:55;6883:16;6878:2;6873:3;6869:12;6862:38;6926:2;6921:3;6917:12;6910:19;;6703:232;;;:::o;6941:327::-;;7104:67;7168:2;7163:3;7104:67;:::i;:::-;7097:74;;7201:31;7197:1;7192:3;7188:11;7181:52;7259:2;7254:3;7250:12;7243:19;;7087:181;;;:::o;7274:317::-;;7437:67;7501:2;7496:3;7437:67;:::i;:::-;7430:74;;7534:21;7530:1;7525:3;7521:11;7514:42;7582:2;7577:3;7573:12;7566:19;;7420:171;;;:::o;7597:325::-;;7760:67;7824:2;7819:3;7760:67;:::i;:::-;7753:74;;7857:29;7853:1;7848:3;7844:11;7837:50;7913:2;7908:3;7904:12;7897:19;;7743:179;;;:::o;7928:365::-;;8091:67;8155:2;8150:3;8091:67;:::i;:::-;8084:74;;8188:34;8184:1;8179:3;8175:11;8168:55;8254:3;8249:2;8244:3;8240:12;8233:25;8284:2;8279:3;8275:12;8268:19;;8074:219;;;:::o;8299:324::-;;8462:67;8526:2;8521:3;8462:67;:::i;:::-;8455:74;;8559:28;8555:1;8550:3;8546:11;8539:49;8614:2;8609:3;8605:12;8598:19;;8445:178;;;:::o;8629:118::-;8716:24;8734:5;8716:24;:::i;:::-;8711:3;8704:37;8694:53;;:::o;8753:222::-;;8884:2;8873:9;8869:18;8861:26;;8897:71;8965:1;8954:9;8950:17;8941:6;8897:71;:::i;:::-;8851:124;;;;:::o;8981:254::-;;9128:2;9117:9;9113:18;9105:26;;9141:87;9225:1;9214:9;9210:17;9201:6;9141:87;:::i;:::-;9095:140;;;;:::o;9241:364::-;;9416:2;9405:9;9401:18;9393:26;;9429:87;9513:1;9502:9;9498:17;9489:6;9429:87;:::i;:::-;9526:72;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9383:222;;;;;:::o;9611:442::-;;9798:2;9787:9;9783:18;9775:26;;9811:71;9879:1;9868:9;9864:17;9855:6;9811:71;:::i;:::-;9892:72;9960:2;9949:9;9945:18;9936:6;9892:72;:::i;:::-;9974;10042:2;10031:9;10027:18;10018:6;9974:72;:::i;:::-;9765:288;;;;;;:::o;10059:210::-;;10184:2;10173:9;10169:18;10161:26;;10197:65;10259:1;10248:9;10244:17;10235:6;10197:65;:::i;:::-;10151:118;;;;:::o;10275:234::-;;10412:2;10401:9;10397:18;10389:26;;10425:77;10499:1;10488:9;10484:17;10475:6;10425:77;:::i;:::-;10379:130;;;;:::o;10515:313::-;;10666:2;10655:9;10651:18;10643:26;;10715:9;10709:4;10705:20;10701:1;10690:9;10686:17;10679:47;10743:78;10816:4;10807:6;10743:78;:::i;:::-;10735:86;;10633:195;;;;:::o;10834:419::-;;11038:2;11027:9;11023:18;11015:26;;11087:9;11081:4;11077:20;11073:1;11062:9;11058:17;11051:47;11115:131;11241:4;11115:131;:::i;:::-;11107:139;;11005:248;;;:::o;11259:419::-;;11463:2;11452:9;11448:18;11440:26;;11512:9;11506:4;11502:20;11498:1;11487:9;11483:17;11476:47;11540:131;11666:4;11540:131;:::i;:::-;11532:139;;11430:248;;;:::o;11684:419::-;;11888:2;11877:9;11873:18;11865:26;;11937:9;11931:4;11927:20;11923:1;11912:9;11908:17;11901:47;11965:131;12091:4;11965:131;:::i;:::-;11957:139;;11855:248;;;:::o;12109:419::-;;12313:2;12302:9;12298:18;12290:26;;12362:9;12356:4;12352:20;12348:1;12337:9;12333:17;12326:47;12390:131;12516:4;12390:131;:::i;:::-;12382:139;;12280:248;;;:::o;12534:419::-;;12738:2;12727:9;12723:18;12715:26;;12787:9;12781:4;12777:20;12773:1;12762:9;12758:17;12751:47;12815:131;12941:4;12815:131;:::i;:::-;12807:139;;12705:248;;;:::o;12959:419::-;;13163:2;13152:9;13148:18;13140:26;;13212:9;13206:4;13202:20;13198:1;13187:9;13183:17;13176:47;13240:131;13366:4;13240:131;:::i;:::-;13232:139;;13130:248;;;:::o;13384:419::-;;13588:2;13577:9;13573:18;13565:26;;13637:9;13631:4;13627:20;13623:1;13612:9;13608:17;13601:47;13665:131;13791:4;13665:131;:::i;:::-;13657:139;;13555:248;;;:::o;13809:419::-;;14013:2;14002:9;13998:18;13990:26;;14062:9;14056:4;14052:20;14048:1;14037:9;14033:17;14026:47;14090:131;14216:4;14090:131;:::i;:::-;14082:139;;13980:248;;;:::o;14234:419::-;;14438:2;14427:9;14423:18;14415:26;;14487:9;14481:4;14477:20;14473:1;14462:9;14458:17;14451:47;14515:131;14641:4;14515:131;:::i;:::-;14507:139;;14405:248;;;:::o;14659:419::-;;14863:2;14852:9;14848:18;14840:26;;14912:9;14906:4;14902:20;14898:1;14887:9;14883:17;14876:47;14940:131;15066:4;14940:131;:::i;:::-;14932:139;;14830:248;;;:::o;15084:419::-;;15288:2;15277:9;15273:18;15265:26;;15337:9;15331:4;15327:20;15323:1;15312:9;15308:17;15301:47;15365:131;15491:4;15365:131;:::i;:::-;15357:139;;15255:248;;;:::o;15509:419::-;;15713:2;15702:9;15698:18;15690:26;;15762:9;15756:4;15752:20;15748:1;15737:9;15733:17;15726:47;15790:131;15916:4;15790:131;:::i;:::-;15782:139;;15680:248;;;:::o;15934:222::-;;16065:2;16054:9;16050:18;16042:26;;16078:71;16146:1;16135:9;16131:17;16122:6;16078:71;:::i;:::-;16032:124;;;;:::o;16162:99::-;;16248:5;16242:12;16232:22;;16221:40;;;:::o;16267:169::-;;16385:6;16380:3;16373:19;16425:4;16420:3;16416:14;16401:29;;16363:73;;;;:::o;16442:305::-;;16501:20;16519:1;16501:20;:::i;:::-;16496:25;;16535:20;16553:1;16535:20;:::i;:::-;16530:25;;16689:1;16621:66;16617:74;16614:1;16611:81;16608:2;;;16695:18;;:::i;:::-;16608:2;16739:1;16736;16732:9;16725:16;;16486:261;;;;:::o;16753:185::-;;16810:20;16828:1;16810:20;:::i;:::-;16805:25;;16844:20;16862:1;16844:20;:::i;:::-;16839:25;;16883:1;16873:2;;16888:18;;:::i;:::-;16873:2;16930:1;16927;16923:9;16918:14;;16795:143;;;;:::o;16944:191::-;;17004:20;17022:1;17004:20;:::i;:::-;16999:25;;17038:20;17056:1;17038:20;:::i;:::-;17033:25;;17077:1;17074;17071:8;17068:2;;;17082:18;;:::i;:::-;17068:2;17127:1;17124;17120:9;17112:17;;16989:146;;;;:::o;17141:96::-;;17207:24;17225:5;17207:24;:::i;:::-;17196:35;;17186:51;;;:::o;17243:104::-;;17317:24;17335:5;17317:24;:::i;:::-;17306:35;;17296:51;;;:::o;17353:90::-;;17430:5;17423:13;17416:21;17405:32;;17395:48;;;:::o;17449:127::-;;17523:5;17512:16;;17529:41;17564:5;17529:41;:::i;:::-;17502:74;;;:::o;17582:126::-;;17659:42;17652:5;17648:54;17637:65;;17627:81;;;:::o;17714:77::-;;17780:5;17769:16;;17759:32;;;:::o;17797:127::-;;17886:32;17912:5;17886:32;:::i;:::-;17873:45;;17863:61;;;:::o;17930:307::-;17998:1;18008:113;18022:6;18019:1;18016:13;18008:113;;;18107:1;18102:3;18098:11;18092:18;18088:1;18083:3;18079:11;18072:39;18044:2;18041:1;18037:10;18032:15;;18008:113;;;18139:6;18136:1;18133:13;18130:2;;;18219:1;18210:6;18205:3;18201:16;18194:27;18130:2;17979:258;;;;:::o;18243:180::-;18291:77;18288:1;18281:88;18388:4;18385:1;18378:15;18412:4;18409:1;18402:15;18429:180;18477:77;18474:1;18467:88;18574:4;18571:1;18564:15;18598:4;18595:1;18588:15;18615:180;18663:77;18660:1;18653:88;18760:4;18757:1;18750:15;18784:4;18781:1;18774:15;18801:102;;18893:2;18889:7;18884:2;18877:5;18873:14;18869:28;18859:38;;18849:54;;;:::o;18909:113::-;18990:1;18983:5;18980:12;18970:2;;18996:18;;:::i;:::-;18970:2;18960:62;:::o;19028:122::-;19101:24;19119:5;19101:24;:::i;:::-;19094:5;19091:35;19081:2;;19140:1;19137;19130:12;19081:2;19071:79;:::o;19156:138::-;19237:32;19263:5;19237:32;:::i;:::-;19230:5;19227:43;19217:2;;19284:1;19281;19274:12;19217:2;19207:87;:::o;19300:122::-;19373:24;19391:5;19373:24;:::i;:::-;19366:5;19363:35;19353:2;;19412:1;19409;19402:12;19353:2;19343:79;:::o",
  "source": "//SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ZCC.sol\";\r\n\r\n\r\ncontract ICO is ZrinCinCoin {\r\n    \r\n    address public manager;\r\n    address payable public deposit;\r\n    address public tokenAddress;\r\n\r\n    struct Sale {\r\n        address payable investor;\r\n        uint quantity;\r\n    }\r\n\r\n    Sale[] public sales;\r\n\r\n    mapping(address => bool) private approvedInvestors;\r\n    mapping(address => uint) private investedAmount;\r\n\r\n    uint public tokenPrice = 0.01 ether;  \r\n    uint public goal = 5000 ether; // 50% of the total supply\r\n    uint public minInvestment = 0.1 ether;\r\n    uint public maxInvestment = 50 ether;\r\n    uint public raisedAmount; \r\n    uint public saleStart;\r\n    uint public saleEnd;   \r\n    uint public tokenTradeStart;\r\n    \r\n    enum State { NOT_STARTED, RUNNING, ENDED, SUSPENDED} \r\n    State ICOState;\r\n\r\n    modifier managerOnly() {\r\n        require(msg.sender == manager, \"ERROR: Only manager allowed\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyInvestors() {\r\n        require(approvedInvestors[msg.sender] == true, \"ERROR: Only approved investors allowed\");\r\n        _;\r\n    }\r\n\r\n    constructor(address payable _deposit) {\r\n        manager = msg.sender;\r\n        deposit = _deposit;\r\n        ICOState = State.NOT_STARTED;\r\n        tokenAddress = address(new ZrinCinCoin());\r\n    }\r\n\r\n    receive() payable external {\r\n        invest();\r\n    }\r\n\r\n    // Only KYC-ed investors are allowed\r\n    function whitelist(address _investor) external managerOnly {\r\n        require(ICOState == State.NOT_STARTED, \"ICO already started\");\r\n        approvedInvestors[_investor] = true;\r\n    }\r\n\r\n    function startICO(uint _duration, uint _lockupPeriod) external managerOnly {\r\n       ICOState = getCurrentState(); \r\n       require(ICOState == State.NOT_STARTED, \"ERROR: ICO already started\");\r\n       saleStart = block.timestamp;\r\n       saleEnd = saleStart + _duration;\r\n       tokenTradeStart = saleEnd + _lockupPeriod;\r\n       ICOState = State.RUNNING;\r\n   }\r\n\r\n    event Invest(address _investor, uint _value, uint _tokens);\r\n\r\n    function invest() payable public onlyInvestors returns (bool success) { \r\n        ICOState = getCurrentState();\r\n        require(ICOState == State.RUNNING, \"ERROR: ICO must be active\");\r\n        require(msg.value >= minInvestment && msg.value <= maxInvestment, \"ERROR: Amount too low or too high\");\r\n\r\n        require(raisedAmount <= goal, \"ERROR: Not enough tokens left\");\r\n        raisedAmount += msg.value;\r\n        \r\n        investedAmount[msg.sender] += msg.value;\r\n        require(investedAmount[msg.sender] <= maxInvestment, \"ERROR: Max investment exceeded\");\r\n       \r\n        uint tokens = msg.value / tokenPrice;\r\n        uint totalSupply = ZrinCinCoin(tokenAddress).totalSupply();\r\n        assert(tokens <= totalSupply);\r\n\r\n        sales.push(Sale(payable(msg.sender), tokens));\r\n \r\n        balances[msg.sender] += tokens;\r\n        balances[creator] -= tokens; \r\n        deposit.transfer(msg.value); \r\n        \r\n        emit Invest(msg.sender, msg.value, tokens);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function transfer(address _to, uint _tokens) public override returns (bool success) {\r\n        require(block.timestamp > tokenTradeStart, \"ERROR: Lock-up period, tokens not released yet\" );\r\n     \r\n        ZrinCinCoin.transfer(_to, _tokens); \r\n        \r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _tokens) public override returns (bool success) {\r\n        require(block.timestamp > tokenTradeStart, \"ERROR: Lock-up period, tokens not released yet\"); \r\n       \r\n        ZrinCinCoin.transferFrom(_from, _to, _tokens); \r\n\r\n        return true;\r\n    }\r\n\r\n    function getCurrentState() public view returns (State) {\r\n        if (ICOState == State.SUSPENDED){\r\n            return State.SUSPENDED;\r\n        } else if (block.timestamp <= saleStart || saleEnd == 0) {\r\n            return State.NOT_STARTED;\r\n        } else if (block.timestamp >= saleStart && block.timestamp <= saleEnd) {\r\n            return State.RUNNING;\r\n        } else {\r\n            return State.ENDED;\r\n        }\r\n    }\r\n\r\n    function stopICO() external managerOnly {\r\n        ICOState = getCurrentState(); \r\n        require(ICOState == State.RUNNING, \"ERROR: ICO already stopped or not yet started\");\r\n        ICOState = State.SUSPENDED;\r\n    }\r\n\r\n     function resumeICO() external managerOnly {\r\n        ICOState = getCurrentState(); \r\n        require(ICOState == State.SUSPENDED, \"ERROR: ICO already running or not yet started\");\r\n        ICOState = State.RUNNING;\r\n    }\r\n\r\n    function changeDepositAddress(address payable _newDeposit) external managerOnly {\r\n        deposit = _newDeposit;\r\n    }\r\n\r\n     function burnTokens() external managerOnly returns (bool success) {\r\n        ICOState = getCurrentState();\r\n        require(ICOState == State.ENDED, \"ERROR: ICO still in progress\");\r\n        \r\n        balances[creator] = 0;\r\n        \r\n        return true;\r\n    }\r\n}",
  "sourcePath": "C:/Users/zrinc/Projects/ICO/contracts/ICO.sol",
  "ast": {
    "absolutePath": "/C/Users/zrinc/Projects/ICO/contracts/ICO.sol",
    "exportedSymbols": {
      "ICO": [
        517
      ],
      "IERC20": [
        586
      ],
      "ZrinCinCoin": [
        816
      ]
    },
    "id": 518,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:0"
      },
      {
        "absolutePath": "/C/Users/zrinc/Projects/ICO/contracts/ZCC.sol",
        "file": "./ZCC.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 518,
        "sourceUnit": 817,
        "src": "65:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ZrinCinCoin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 816,
              "src": "106:11:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "106:11:0"
          }
        ],
        "contractDependencies": [
          586,
          816
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 517,
        "linearizedBaseContracts": [
          517,
          816,
          586
        ],
        "name": "ICO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "481c6a75",
            "id": 6,
            "mutability": "mutable",
            "name": "manager",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "131:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "131:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0e30db0",
            "id": 8,
            "mutability": "mutable",
            "name": "deposit",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "160:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "160:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 10,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "197:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ICO.Sale",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "investor",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "256:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "256:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "quantity",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "291:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Sale",
            "nodeType": "StructDefinition",
            "scope": 517,
            "src": "233:79:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5f522f7",
            "id": 19,
            "mutability": "mutable",
            "name": "sales",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "320:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Sale_$15_storage_$dyn_storage",
              "typeString": "struct ICO.Sale[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 16,
                  "name": "Sale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15,
                  "src": "320:4:0"
                },
                "referencedDeclaration": 15,
                "src": "320:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sale_$15_storage_ptr",
                  "typeString": "struct ICO.Sale"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "320:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Sale_$15_storage_$dyn_storage_ptr",
                "typeString": "struct ICO.Sale[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "approvedInvestors",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "348:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "348:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 21,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "367:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "investedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "405:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "405:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "424:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7ff9b596",
            "id": 30,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "461:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "461:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "486:10:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "40193883",
            "id": 33,
            "mutability": "mutable",
            "name": "goal",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "505:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "505:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "524:10:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ac2c680",
            "id": 36,
            "mutability": "mutable",
            "name": "minInvestment",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "568:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "568:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "596:9:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "002e1316",
            "id": 39,
            "mutability": "mutable",
            "name": "maxInvestment",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "612:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "612:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "640:8:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c59ee1dc",
            "id": 41,
            "mutability": "mutable",
            "name": "raisedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "655:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "655:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab0bcc41",
            "id": 43,
            "mutability": "mutable",
            "name": "saleStart",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "687:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "687:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c10b9358",
            "id": 45,
            "mutability": "mutable",
            "name": "saleEnd",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "715:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "715:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9ba583",
            "id": 47,
            "mutability": "mutable",
            "name": "tokenTradeStart",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "744:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "744:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ICO.State",
            "id": 52,
            "members": [
              {
                "id": 48,
                "name": "NOT_STARTED",
                "nodeType": "EnumValue",
                "src": "797:11:0"
              },
              {
                "id": 49,
                "name": "RUNNING",
                "nodeType": "EnumValue",
                "src": "810:7:0"
              },
              {
                "id": 50,
                "name": "ENDED",
                "nodeType": "EnumValue",
                "src": "819:5:0"
              },
              {
                "id": 51,
                "name": "SUSPENDED",
                "nodeType": "EnumValue",
                "src": "826:9:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "784:52:0"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "ICOState",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "843:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$52",
              "typeString": "enum ICO.State"
            },
            "typeName": {
              "id": 54,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52,
                "src": "843:5:0"
              },
              "referencedDeclaration": 52,
              "src": "843:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$52",
                "typeString": "enum ICO.State"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "889:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "908:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "908:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 60,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "922:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "908:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204f6e6c79206d616e6167657220616c6c6f776564",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "931:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1",
                          "typeString": "literal_string \"ERROR: Only manager allowed\""
                        },
                        "value": "ERROR: Only manager allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1",
                          "typeString": "literal_string \"ERROR: Only manager allowed\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "900:61:0"
                },
                {
                  "id": 65,
                  "nodeType": "PlaceholderStatement",
                  "src": "972:1:0"
                }
              ]
            },
            "id": 67,
            "name": "managerOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:0"
            },
            "src": "866:115:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1014:119:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 70,
                            "name": "approvedInvestors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1033:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 73,
                          "indexExpression": {
                            "expression": {
                              "id": 71,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1051:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1051:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1033:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1066:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1033:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204f6e6c7920617070726f76656420696e766573746f727320616c6c6f776564",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af",
                          "typeString": "literal_string \"ERROR: Only approved investors allowed\""
                        },
                        "value": "ERROR: Only approved investors allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af",
                          "typeString": "literal_string \"ERROR: Only approved investors allowed\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:88:0"
                },
                {
                  "id": 79,
                  "nodeType": "PlaceholderStatement",
                  "src": "1124:1:0"
                }
              ]
            },
            "id": 81,
            "name": "onlyInvestors",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:2:0"
            },
            "src": "989:144:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1179:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1190:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 87,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1200:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1200:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1190:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:20:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1221:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1231:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1221:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:18:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1250:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 96,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1261:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "NOT_STARTED",
                      "nodeType": "MemberAccess",
                      "src": "1261:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "1250:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:28:0"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1289:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1312:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ZrinCinCoin_$816_$",
                              "typeString": "function () returns (contract ZrinCinCoin)"
                            },
                            "typeName": {
                              "id": 104,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 103,
                                "name": "ZrinCinCoin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 816,
                                "src": "1316:11:0"
                              },
                              "referencedDeclaration": 816,
                              "src": "1316:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                                "typeString": "contract ZrinCinCoin"
                              }
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1312:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                            "typeString": "contract ZrinCinCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                            "typeString": "contract ZrinCinCoin"
                          }
                        ],
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1304:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1304:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:41:0"
                }
              ]
            },
            "id": 111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1153:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:26:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:0"
            },
            "scope": 517,
            "src": "1141:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1373:27:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 114,
                      "name": "invest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "1384:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:8:0"
                }
              ]
            },
            "id": 118,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1353:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:0"
            },
            "scope": 517,
            "src": "1346:54:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1509:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 126,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1528:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 127,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1540:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "1540:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "1528:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49434f20616c72656164792073746172746564",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1559:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d",
                          "typeString": "literal_string \"ICO already started\""
                        },
                        "value": "ICO already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d",
                          "typeString": "literal_string \"ICO already started\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:61:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 133,
                        "name": "approvedInvestors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1592:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "id": 134,
                        "name": "_investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1610:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1592:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1623:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1592:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:35:0"
                }
              ]
            },
            "functionSelector": "9b19251a",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 123,
                "modifierName": {
                  "id": 122,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "1497:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:11:0"
              }
            ],
            "name": "whitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_investor",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1469:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:19:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:0"
            },
            "scope": 517,
            "src": "1450:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1718:287:0",
              "statements": [
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 149,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1728:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 150,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "1739:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1739:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "1728:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 155,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1775:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 156,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1787:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "1787:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "1775:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f20616c72656164792073746172746564",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1806:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052",
                          "typeString": "literal_string \"ERROR: ICO already started\""
                        },
                        "value": "ERROR: ICO already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052",
                          "typeString": "literal_string \"ERROR: ICO already started\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1767:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:68:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "saleStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1845:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 163,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1857:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1857:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1845:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:27:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 167,
                      "name": "saleEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1882:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 168,
                        "name": "saleStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1892:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 169,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1904:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1892:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1882:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:31:0"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "tokenTradeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1923:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 174,
                        "name": "saleEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1941:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 175,
                        "name": "_lockupPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1951:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1941:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1923:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:41:0"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 179,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1974:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 180,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1985:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RUNNING",
                      "nodeType": "MemberAccess",
                      "src": "1985:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "1974:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:24:0"
                }
              ]
            },
            "functionSelector": "9c08d549",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 147,
                "modifierName": {
                  "id": 146,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "1706:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1706:11:0"
              }
            ],
            "name": "startICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1661:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_lockupPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1677:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:36:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:0"
            },
            "scope": 517,
            "src": "1643:362:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 193,
            "name": "Invest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_investor",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2026:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2045:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2058:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:46:0"
            },
            "src": "2013:59:0"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "2150:943:0",
              "statements": [
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 200,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "2162:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 201,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "2173:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2173:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "2162:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 206,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "2209:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 207,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "2221:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "src": "2221:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "2209:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f206d75737420626520616374697665",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2236:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c",
                          "typeString": "literal_string \"ERROR: ICO must be active\""
                        },
                        "value": "ERROR: ICO must be active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c",
                          "typeString": "literal_string \"ERROR: ICO must be active\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2201:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2283:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2283:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 216,
                            "name": "minInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2296:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2283:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 218,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2313:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2313:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 220,
                            "name": "maxInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2326:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2313:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2283:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a20416d6f756e7420746f6f206c6f77206f7220746f6f2068696768",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2341:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e",
                          "typeString": "literal_string \"ERROR: Amount too low or too high\""
                        },
                        "value": "ERROR: Amount too low or too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e",
                          "typeString": "literal_string \"ERROR: Amount too low or too high\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:102:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 227,
                          "name": "raisedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2398:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 228,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2414:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2398:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204e6f7420656e6f75676820746f6b656e73206c656674",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001",
                          "typeString": "literal_string \"ERROR: Not enough tokens left\""
                        },
                        "value": "ERROR: Not enough tokens left"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001",
                          "typeString": "literal_string \"ERROR: Not enough tokens left\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2390:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:62:0"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 233,
                      "name": "raisedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2463:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 234,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2479:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2479:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2463:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:25:0"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 238,
                        "name": "investedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2509:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "expression": {
                          "id": 239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2524:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2524:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2509:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 242,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2539:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2539:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2509:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 247,
                            "name": "investedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2567:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "expression": {
                              "id": 248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2582:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2582:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2567:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 251,
                          "name": "maxInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2597:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2567:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204d617820696e766573746d656e74206578636565646564",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2612:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45",
                          "typeString": "literal_string \"ERROR: Max investment exceeded\""
                        },
                        "value": "ERROR: Max investment exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45",
                          "typeString": "literal_string \"ERROR: Max investment exceeded\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2559:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:86:0"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "2665:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 256,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2665:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 258,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2679:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2679:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 260,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2691:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2679:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2665:36:0"
                },
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "2712:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2712:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2743:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 265,
                          "name": "ZrinCinCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 816,
                          "src": "2731:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZrinCinCoin_$816_$",
                            "typeString": "type(contract ZrinCinCoin)"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2731:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                          "typeString": "contract ZrinCinCoin"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 639,
                      "src": "2731:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2712:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 272,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "2788:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 273,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "2798:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2788:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 271,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "2781:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 283,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2847:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2847:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2839:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 281,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2839:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2839:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 286,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2860:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 280,
                          "name": "Sale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2834:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Sale_$15_storage_ptr_$",
                            "typeString": "type(struct ICO.Sale storage pointer)"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sale_$15_memory_ptr",
                          "typeString": "struct ICO.Sale memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Sale_$15_memory_ptr",
                          "typeString": "struct ICO.Sale memory"
                        }
                      ],
                      "expression": {
                        "id": 277,
                        "name": "sales",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2823:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Sale_$15_storage_$dyn_storage",
                          "typeString": "struct ICO.Sale storage ref[] storage ref"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2823:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Sale_$15_storage_$returns$__$",
                        "typeString": "function (struct ICO.Sale storage ref)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2823:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:45:0"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 290,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2882:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 293,
                      "indexExpression": {
                        "expression": {
                          "id": 291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2891:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2891:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2882:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "2906:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2882:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "2882:30:0"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 297,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2923:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "id": 298,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "2932:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2923:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 300,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "2944:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2923:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 306,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2979:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2979:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 303,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2962:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2962:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2962:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3023:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3023:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3035:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3035:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 315,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3046:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 310,
                      "name": "Invest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3016:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "EmitStatement",
                  "src": "3011:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3081:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 199,
                  "id": 319,
                  "nodeType": "Return",
                  "src": "3074:11:0"
                }
              ]
            },
            "functionSelector": "e8b5e51f",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 196,
                "modifierName": {
                  "id": 195,
                  "name": "onlyInvestors",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81,
                  "src": "2113:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2113:13:0"
              }
            ],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:2:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "2136:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:14:0"
            },
            "scope": 517,
            "src": "2080:1013:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              694
            ],
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3185:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 332,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3204:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3204:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 334,
                          "name": "tokenTradeStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3222:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3204:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204c6f636b2d757020706572696f642c20746f6b656e73206e6f742072656c656173656420796574",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3239:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        },
                        "value": "ERROR: Lock-up period, tokens not released yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:93:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "3328:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 343,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "3333:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 339,
                        "name": "ZrinCinCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "3307:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZrinCinCoin_$816_$",
                          "typeString": "type(contract ZrinCinCoin)"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 694,
                      "src": "3307:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:34:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3370:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 330,
                  "id": 347,
                  "nodeType": "Return",
                  "src": "3363:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3153:8:0"
            },
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3119:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3132:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:27:0"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3171:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3170:14:0"
            },
            "scope": 517,
            "src": "3101:281:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              815
            ],
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "3493:202:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 362,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3512:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3512:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 364,
                          "name": "tokenTradeStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3530:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3512:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204c6f636b2d757020706572696f642c20746f6b656e73206e6f742072656c656173656420796574",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        },
                        "value": "ERROR: Lock-up period, tokens not released yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:92:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:92:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 372,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "3642:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 373,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3649:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 374,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3654:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 369,
                        "name": "ZrinCinCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "3617:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZrinCinCoin_$816_$",
                          "typeString": "type(contract ZrinCinCoin)"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "3617:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3617:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:45:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3683:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 360,
                  "id": 378,
                  "nodeType": "Return",
                  "src": "3676:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 357,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3461:8:0"
            },
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3412:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3427:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3440:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3411:42:0"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3479:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3479:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3478:14:0"
            },
            "scope": 517,
            "src": "3390:305:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "3758:374:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 386,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3773:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 387,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3785:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUSPENDED",
                      "nodeType": "MemberAccess",
                      "src": "3785:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "3773:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 394,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3860:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3860:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 396,
                          "name": "saleStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "3879:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3860:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 398,
                          "name": "saleEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3903:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3892:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3860:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 406,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3967:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3967:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 408,
                            "name": "saleStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3986:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3967:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 410,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3999:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3999:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 412,
                            "name": "saleEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "4018:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3999:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3967:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 422,
                        "nodeType": "Block",
                        "src": "4080:45:0",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 419,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "4102:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                                  "typeString": "type(enum ICO.State)"
                                }
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ENDED",
                              "nodeType": "MemberAccess",
                              "src": "4102:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$52",
                                "typeString": "enum ICO.State"
                              }
                            },
                            "functionReturnParameters": 385,
                            "id": 421,
                            "nodeType": "Return",
                            "src": "4095:18:0"
                          }
                        ]
                      },
                      "id": 423,
                      "nodeType": "IfStatement",
                      "src": "3963:162:0",
                      "trueBody": {
                        "id": 418,
                        "nodeType": "Block",
                        "src": "4027:47:0",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 415,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "4049:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                                  "typeString": "type(enum ICO.State)"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RUNNING",
                              "nodeType": "MemberAccess",
                              "src": "4049:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$52",
                                "typeString": "enum ICO.State"
                              }
                            },
                            "functionReturnParameters": 385,
                            "id": 417,
                            "nodeType": "Return",
                            "src": "4042:20:0"
                          }
                        ]
                      }
                    },
                    "id": 424,
                    "nodeType": "IfStatement",
                    "src": "3856:269:0",
                    "trueBody": {
                      "id": 405,
                      "nodeType": "Block",
                      "src": "3906:51:0",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 402,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "3928:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                                "typeString": "type(enum ICO.State)"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NOT_STARTED",
                            "nodeType": "MemberAccess",
                            "src": "3928:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$52",
                              "typeString": "enum ICO.State"
                            }
                          },
                          "functionReturnParameters": 385,
                          "id": 404,
                          "nodeType": "Return",
                          "src": "3921:24:0"
                        }
                      ]
                    }
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "3769:356:0",
                  "trueBody": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "3801:49:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 390,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3823:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SUSPENDED",
                          "nodeType": "MemberAccess",
                          "src": "3823:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "functionReturnParameters": 385,
                        "id": 392,
                        "nodeType": "Return",
                        "src": "3816:22:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "378aa701",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3727:2:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3751:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$52",
                    "typeString": "enum ICO.State"
                  },
                  "typeName": {
                    "id": 383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 382,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52,
                      "src": "3751:5:0"
                    },
                    "referencedDeclaration": 52,
                    "src": "3751:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3750:7:0"
            },
            "scope": 517,
            "src": "3703:429:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "4180:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 432,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4191:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 433,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4202:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4202:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4191:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 438,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4239:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 439,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4251:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "src": "4251:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "4239:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f20616c72656164792073746f70706564206f72206e6f74207965742073746172746564",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4266:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380",
                          "typeString": "literal_string \"ERROR: ICO already stopped or not yet started\""
                        },
                        "value": "ERROR: ICO already stopped or not yet started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380",
                          "typeString": "literal_string \"ERROR: ICO already stopped or not yet started\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:83:0"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 445,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4325:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 446,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4336:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUSPENDED",
                      "nodeType": "MemberAccess",
                      "src": "4336:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4325:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:26:0"
                }
              ]
            },
            "functionSelector": "c8e569a8",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 430,
                "modifierName": {
                  "id": 429,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4168:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4168:11:0"
              }
            ],
            "name": "stopICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4156:2:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4180:0:0"
            },
            "scope": 517,
            "src": "4140:219:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "4410:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 456,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4421:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 457,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4432:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4432:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4421:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 462,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4469:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 463,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4481:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SUSPENDED",
                          "nodeType": "MemberAccess",
                          "src": "4481:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "4469:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f20616c72656164792072756e6e696e67206f72206e6f74207965742073746172746564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4498:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5",
                          "typeString": "literal_string \"ERROR: ICO already running or not yet started\""
                        },
                        "value": "ERROR: ICO already running or not yet started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5",
                          "typeString": "literal_string \"ERROR: ICO already running or not yet started\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4461:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4461:85:0"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 469,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4557:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 470,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4568:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RUNNING",
                      "nodeType": "MemberAccess",
                      "src": "4568:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4557:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:24:0"
                }
              ]
            },
            "functionSelector": "9cbd7da5",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 454,
                "modifierName": {
                  "id": 453,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4398:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4398:11:0"
              }
            ],
            "name": "resumeICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4386:2:0"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4410:0:0"
            },
            "scope": 517,
            "src": "4368:221:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "4677:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 482,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "4688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 483,
                      "name": "_newDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "4698:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4688:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:21:0"
                }
              ]
            },
            "functionSelector": "6d58c88f",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 480,
                "modifierName": {
                  "id": 479,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4665:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4665:11:0"
              }
            ],
            "name": "changeDepositAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "_newDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "4627:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4626:29:0"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4677:0:0"
            },
            "scope": 517,
            "src": "4597:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "4792:196:0",
              "statements": [
                {
                  "expression": {
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 494,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4803:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 495,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4814:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4814:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4803:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "4803:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 500,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4850:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 501,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4862:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ENDED",
                          "nodeType": "MemberAccess",
                          "src": "4862:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "4850:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f207374696c6c20696e2070726f6772657373",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4875:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1",
                          "typeString": "literal_string \"ERROR: ICO still in progress\""
                        },
                        "value": "ERROR: ICO still in progress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1",
                          "typeString": "literal_string \"ERROR: ICO still in progress\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4842:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:64:0"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 507,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "4927:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "id": 508,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "4936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4927:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4947:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4927:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4927:21:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4976:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 493,
                  "id": 514,
                  "nodeType": "Return",
                  "src": "4969:11:0"
                }
              ]
            },
            "functionSelector": "08003f78",
            "id": 516,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 490,
                "modifierName": {
                  "id": 489,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4757:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4757:11:0"
              }
            ],
            "name": "burnTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4745:2:0"
            },
            "returnParameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "4778:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4778:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4777:14:0"
            },
            "scope": 517,
            "src": "4726:262:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 518,
        "src": "90:4901:0"
      }
    ],
    "src": "38:4953:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/zrinc/Projects/ICO/contracts/ICO.sol",
    "exportedSymbols": {
      "ICO": [
        517
      ],
      "IERC20": [
        586
      ],
      "ZrinCinCoin": [
        816
      ]
    },
    "id": 518,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:0"
      },
      {
        "absolutePath": "/C/Users/zrinc/Projects/ICO/contracts/ZCC.sol",
        "file": "./ZCC.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 518,
        "sourceUnit": 817,
        "src": "65:19:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ZrinCinCoin",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 816,
              "src": "106:11:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "106:11:0"
          }
        ],
        "contractDependencies": [
          586,
          816
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 517,
        "linearizedBaseContracts": [
          517,
          816,
          586
        ],
        "name": "ICO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "481c6a75",
            "id": 6,
            "mutability": "mutable",
            "name": "manager",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "131:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "131:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0e30db0",
            "id": 8,
            "mutability": "mutable",
            "name": "deposit",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "160:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "160:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 10,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "197:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "197:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ICO.Sale",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "investor",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "256:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "256:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "quantity",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "291:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Sale",
            "nodeType": "StructDefinition",
            "scope": 517,
            "src": "233:79:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5f522f7",
            "id": 19,
            "mutability": "mutable",
            "name": "sales",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "320:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Sale_$15_storage_$dyn_storage",
              "typeString": "struct ICO.Sale[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 16,
                  "name": "Sale",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15,
                  "src": "320:4:0"
                },
                "referencedDeclaration": 15,
                "src": "320:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Sale_$15_storage_ptr",
                  "typeString": "struct ICO.Sale"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "320:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Sale_$15_storage_$dyn_storage_ptr",
                "typeString": "struct ICO.Sale[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "approvedInvestors",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "348:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "348:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 21,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "367:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "investedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "405:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "405:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "424:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7ff9b596",
            "id": 30,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "461:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "461:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "486:10:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "40193883",
            "id": 33,
            "mutability": "mutable",
            "name": "goal",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "505:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "505:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "524:10:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ac2c680",
            "id": 36,
            "mutability": "mutable",
            "name": "minInvestment",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "568:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "568:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e31",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "596:9:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "002e1316",
            "id": 39,
            "mutability": "mutable",
            "name": "maxInvestment",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "612:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "612:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "640:8:0",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50000000000000000000_by_1",
                "typeString": "int_const 50000000000000000000"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c59ee1dc",
            "id": 41,
            "mutability": "mutable",
            "name": "raisedAmount",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "655:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "655:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ab0bcc41",
            "id": 43,
            "mutability": "mutable",
            "name": "saleStart",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "687:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "687:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c10b9358",
            "id": 45,
            "mutability": "mutable",
            "name": "saleEnd",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "715:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "715:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9ba583",
            "id": 47,
            "mutability": "mutable",
            "name": "tokenTradeStart",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "744:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "744:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "ICO.State",
            "id": 52,
            "members": [
              {
                "id": 48,
                "name": "NOT_STARTED",
                "nodeType": "EnumValue",
                "src": "797:11:0"
              },
              {
                "id": 49,
                "name": "RUNNING",
                "nodeType": "EnumValue",
                "src": "810:7:0"
              },
              {
                "id": 50,
                "name": "ENDED",
                "nodeType": "EnumValue",
                "src": "819:5:0"
              },
              {
                "id": 51,
                "name": "SUSPENDED",
                "nodeType": "EnumValue",
                "src": "826:9:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "784:52:0"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "ICOState",
            "nodeType": "VariableDeclaration",
            "scope": 517,
            "src": "843:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$52",
              "typeString": "enum ICO.State"
            },
            "typeName": {
              "id": 54,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52,
                "src": "843:5:0"
              },
              "referencedDeclaration": 52,
              "src": "843:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$52",
                "typeString": "enum ICO.State"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "889:92:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "908:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "908:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 60,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "922:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "908:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204f6e6c79206d616e6167657220616c6c6f776564",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "931:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1",
                          "typeString": "literal_string \"ERROR: Only manager allowed\""
                        },
                        "value": "ERROR: Only manager allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd092fb868e8505e89604e1bb78174e71e6fee2f72cee028f08aacb1e2363b1",
                          "typeString": "literal_string \"ERROR: Only manager allowed\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "900:61:0"
                },
                {
                  "id": 65,
                  "nodeType": "PlaceholderStatement",
                  "src": "972:1:0"
                }
              ]
            },
            "id": 67,
            "name": "managerOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:0"
            },
            "src": "866:115:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "1014:119:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 70,
                            "name": "approvedInvestors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1033:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 73,
                          "indexExpression": {
                            "expression": {
                              "id": 71,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1051:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1051:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1033:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1066:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1033:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204f6e6c7920617070726f76656420696e766573746f727320616c6c6f776564",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af",
                          "typeString": "literal_string \"ERROR: Only approved investors allowed\""
                        },
                        "value": "ERROR: Only approved investors allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40b5326403d5cbedc0fd6725a24983ff5c8558797c3d575bbc6119b86563f0af",
                          "typeString": "literal_string \"ERROR: Only approved investors allowed\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:88:0"
                },
                {
                  "id": 79,
                  "nodeType": "PlaceholderStatement",
                  "src": "1124:1:0"
                }
              ]
            },
            "id": 81,
            "name": "onlyInvestors",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:2:0"
            },
            "src": "989:144:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1179:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1190:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 87,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1200:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1200:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1190:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:20:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1221:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1231:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1221:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:18:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1250:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 96,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1261:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "NOT_STARTED",
                      "nodeType": "MemberAccess",
                      "src": "1261:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "1250:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1250:28:0"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1289:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1312:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ZrinCinCoin_$816_$",
                              "typeString": "function () returns (contract ZrinCinCoin)"
                            },
                            "typeName": {
                              "id": 104,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 103,
                                "name": "ZrinCinCoin",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 816,
                                "src": "1316:11:0"
                              },
                              "referencedDeclaration": 816,
                              "src": "1316:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                                "typeString": "contract ZrinCinCoin"
                              }
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1312:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                            "typeString": "contract ZrinCinCoin"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                            "typeString": "contract ZrinCinCoin"
                          }
                        ],
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1304:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1304:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:41:0"
                }
              ]
            },
            "id": 111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1153:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:26:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:0"
            },
            "scope": 517,
            "src": "1141:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1373:27:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 114,
                      "name": "invest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "1384:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:8:0"
                }
              ]
            },
            "id": 118,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1353:2:0"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:0"
            },
            "scope": 517,
            "src": "1346:54:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1509:126:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 126,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1528:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 127,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1540:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "1540:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "1528:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49434f20616c72656164792073746172746564",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1559:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d",
                          "typeString": "literal_string \"ICO already started\""
                        },
                        "value": "ICO already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d018813a5e8f6c8e7c30834f2dadec9e7987e8f97668a23d0dbf854dd75b6d",
                          "typeString": "literal_string \"ICO already started\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:61:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 133,
                        "name": "approvedInvestors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1592:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "id": 134,
                        "name": "_investor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1610:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1592:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1623:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1592:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:35:0"
                }
              ]
            },
            "functionSelector": "9b19251a",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 123,
                "modifierName": {
                  "id": 122,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "1497:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1497:11:0"
              }
            ],
            "name": "whitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_investor",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1469:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:19:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1509:0:0"
            },
            "scope": 517,
            "src": "1450:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1718:287:0",
              "statements": [
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 149,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1728:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 150,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "1739:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1739:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "1728:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 155,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1775:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 156,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1787:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "1787:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "1775:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f20616c72656164792073746172746564",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1806:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052",
                          "typeString": "literal_string \"ERROR: ICO already started\""
                        },
                        "value": "ERROR: ICO already started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e801272efe8de3a0d8dd0781e69a4b1d2c245bf6ea65d3ee42ea577bd5319052",
                          "typeString": "literal_string \"ERROR: ICO already started\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1767:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1767:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:68:0"
                },
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "saleStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1845:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 163,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1857:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1857:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1845:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:27:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 167,
                      "name": "saleEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1882:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 168,
                        "name": "saleStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1892:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 169,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1904:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1892:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1882:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:31:0"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "tokenTradeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1923:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 174,
                        "name": "saleEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1941:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 175,
                        "name": "_lockupPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1951:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1941:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1923:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:41:0"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 179,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1974:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 180,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1985:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RUNNING",
                      "nodeType": "MemberAccess",
                      "src": "1985:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "1974:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:24:0"
                }
              ]
            },
            "functionSelector": "9c08d549",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 147,
                "modifierName": {
                  "id": 146,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "1706:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1706:11:0"
              }
            ],
            "name": "startICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1661:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "_lockupPeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1677:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:36:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:0"
            },
            "scope": 517,
            "src": "1643:362:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 193,
            "name": "Invest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_investor",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2026:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2045:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2058:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:46:0"
            },
            "src": "2013:59:0"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "2150:943:0",
              "statements": [
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 200,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "2162:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 201,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "2173:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2173:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "2162:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 206,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "2209:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 207,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "2221:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "src": "2221:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "2209:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f206d75737420626520616374697665",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2236:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c",
                          "typeString": "literal_string \"ERROR: ICO must be active\""
                        },
                        "value": "ERROR: ICO must be active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00892338580214f641e91d4d488c80752755447fbfab1d9eac21625a91fcca7c",
                          "typeString": "literal_string \"ERROR: ICO must be active\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2201:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 214,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2283:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2283:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 216,
                            "name": "minInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2296:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2283:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 218,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2313:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2313:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 220,
                            "name": "maxInvestment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2326:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2313:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2283:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a20416d6f756e7420746f6f206c6f77206f7220746f6f2068696768",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2341:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e",
                          "typeString": "literal_string \"ERROR: Amount too low or too high\""
                        },
                        "value": "ERROR: Amount too low or too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e343959e3f8e924555f6f826d3cc1bf4fcecf2489642125c9447575001548b8e",
                          "typeString": "literal_string \"ERROR: Amount too low or too high\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:102:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 227,
                          "name": "raisedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2398:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 228,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2414:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2398:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204e6f7420656e6f75676820746f6b656e73206c656674",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2420:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001",
                          "typeString": "literal_string \"ERROR: Not enough tokens left\""
                        },
                        "value": "ERROR: Not enough tokens left"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c20869083185753a9d5e99e684fde6bff0ad89113c0d07329266fb06ecb6d001",
                          "typeString": "literal_string \"ERROR: Not enough tokens left\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2390:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:62:0"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 233,
                      "name": "raisedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2463:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 234,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2479:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2479:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2463:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:25:0"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 238,
                        "name": "investedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2509:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "expression": {
                          "id": 239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2524:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2524:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2509:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 242,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2539:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2539:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2509:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 247,
                            "name": "investedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "2567:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 250,
                          "indexExpression": {
                            "expression": {
                              "id": 248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2582:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2582:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2567:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 251,
                          "name": "maxInvestment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2597:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2567:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204d617820696e766573746d656e74206578636565646564",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2612:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45",
                          "typeString": "literal_string \"ERROR: Max investment exceeded\""
                        },
                        "value": "ERROR: Max investment exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e8058c6073e57f9e35705361fa1621357df9c626723f2b77e8eee971fa9ce45",
                          "typeString": "literal_string \"ERROR: Max investment exceeded\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2559:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2559:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:86:0"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "2665:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 256,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2665:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 258,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2679:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2679:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 260,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2691:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2679:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2665:36:0"
                },
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "2712:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2712:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2743:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 265,
                          "name": "ZrinCinCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 816,
                          "src": "2731:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZrinCinCoin_$816_$",
                            "typeString": "type(contract ZrinCinCoin)"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2731:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZrinCinCoin_$816",
                          "typeString": "contract ZrinCinCoin"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 639,
                      "src": "2731:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2712:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 272,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "2788:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 273,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "2798:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2788:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 271,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "2781:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 283,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2847:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2847:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2839:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 281,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2839:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2839:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 286,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "2860:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 280,
                          "name": "Sale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2834:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Sale_$15_storage_ptr_$",
                            "typeString": "type(struct ICO.Sale storage pointer)"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2834:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Sale_$15_memory_ptr",
                          "typeString": "struct ICO.Sale memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Sale_$15_memory_ptr",
                          "typeString": "struct ICO.Sale memory"
                        }
                      ],
                      "expression": {
                        "id": 277,
                        "name": "sales",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2823:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Sale_$15_storage_$dyn_storage",
                          "typeString": "struct ICO.Sale storage ref[] storage ref"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2823:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Sale_$15_storage_$returns$__$",
                        "typeString": "function (struct ICO.Sale storage ref)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2823:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:45:0"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 290,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2882:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 293,
                      "indexExpression": {
                        "expression": {
                          "id": 291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2891:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2891:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2882:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 294,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "2906:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2882:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "2882:30:0"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 297,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "2923:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "id": 298,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "2932:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2923:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 300,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "2944:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2923:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 306,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2979:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2979:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 303,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2962:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2962:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2962:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3023:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3023:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3035:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3035:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 315,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3046:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 310,
                      "name": "Invest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3016:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "EmitStatement",
                  "src": "3011:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3081:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 199,
                  "id": 319,
                  "nodeType": "Return",
                  "src": "3074:11:0"
                }
              ]
            },
            "functionSelector": "e8b5e51f",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 196,
                "modifierName": {
                  "id": 195,
                  "name": "onlyInvestors",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81,
                  "src": "2113:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2113:13:0"
              }
            ],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:2:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "2136:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:14:0"
            },
            "scope": 517,
            "src": "2080:1013:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              694
            ],
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3185:197:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 332,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3204:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3204:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 334,
                          "name": "tokenTradeStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3222:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3204:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204c6f636b2d757020706572696f642c20746f6b656e73206e6f742072656c656173656420796574",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3239:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        },
                        "value": "ERROR: Lock-up period, tokens not released yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:93:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "3328:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 343,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "3333:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 339,
                        "name": "ZrinCinCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "3307:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZrinCinCoin_$816_$",
                          "typeString": "type(contract ZrinCinCoin)"
                        }
                      },
                      "id": 341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 694,
                      "src": "3307:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:34:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3370:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 330,
                  "id": 347,
                  "nodeType": "Return",
                  "src": "3363:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3153:8:0"
            },
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3119:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3132:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:27:0"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3171:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3170:14:0"
            },
            "scope": 517,
            "src": "3101:281:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              815
            ],
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "3493:202:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 362,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3512:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3512:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 364,
                          "name": "tokenTradeStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3530:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3512:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a204c6f636b2d757020706572696f642c20746f6b656e73206e6f742072656c656173656420796574",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        },
                        "value": "ERROR: Lock-up period, tokens not released yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a52d0add90ce2217695c657339a336d71fb77ca56e1599f44c235edb702bc7a2",
                          "typeString": "literal_string \"ERROR: Lock-up period, tokens not released yet\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:92:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:92:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 372,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "3642:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 373,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3649:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 374,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3654:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 369,
                        "name": "ZrinCinCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "3617:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZrinCinCoin_$816_$",
                          "typeString": "type(contract ZrinCinCoin)"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "3617:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3617:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:45:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3683:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 360,
                  "id": 378,
                  "nodeType": "Return",
                  "src": "3676:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 357,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3461:8:0"
            },
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3412:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3427:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3440:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3411:42:0"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3479:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3479:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3478:14:0"
            },
            "scope": 517,
            "src": "3390:305:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "3758:374:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 386,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3773:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 387,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3785:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUSPENDED",
                      "nodeType": "MemberAccess",
                      "src": "3785:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "3773:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 394,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3860:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3860:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 396,
                          "name": "saleStart",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "3879:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3860:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 398,
                          "name": "saleEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "3892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3903:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3892:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3860:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 406,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3967:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3967:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 408,
                            "name": "saleStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "3986:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3967:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 410,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3999:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3999:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 412,
                            "name": "saleEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "4018:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3999:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3967:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 422,
                        "nodeType": "Block",
                        "src": "4080:45:0",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 419,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "4102:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                                  "typeString": "type(enum ICO.State)"
                                }
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ENDED",
                              "nodeType": "MemberAccess",
                              "src": "4102:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$52",
                                "typeString": "enum ICO.State"
                              }
                            },
                            "functionReturnParameters": 385,
                            "id": 421,
                            "nodeType": "Return",
                            "src": "4095:18:0"
                          }
                        ]
                      },
                      "id": 423,
                      "nodeType": "IfStatement",
                      "src": "3963:162:0",
                      "trueBody": {
                        "id": 418,
                        "nodeType": "Block",
                        "src": "4027:47:0",
                        "statements": [
                          {
                            "expression": {
                              "expression": {
                                "id": 415,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "4049:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                                  "typeString": "type(enum ICO.State)"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RUNNING",
                              "nodeType": "MemberAccess",
                              "src": "4049:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$52",
                                "typeString": "enum ICO.State"
                              }
                            },
                            "functionReturnParameters": 385,
                            "id": 417,
                            "nodeType": "Return",
                            "src": "4042:20:0"
                          }
                        ]
                      }
                    },
                    "id": 424,
                    "nodeType": "IfStatement",
                    "src": "3856:269:0",
                    "trueBody": {
                      "id": 405,
                      "nodeType": "Block",
                      "src": "3906:51:0",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 402,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "3928:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                                "typeString": "type(enum ICO.State)"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NOT_STARTED",
                            "nodeType": "MemberAccess",
                            "src": "3928:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$52",
                              "typeString": "enum ICO.State"
                            }
                          },
                          "functionReturnParameters": 385,
                          "id": 404,
                          "nodeType": "Return",
                          "src": "3921:24:0"
                        }
                      ]
                    }
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "3769:356:0",
                  "trueBody": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "3801:49:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 390,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "3823:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SUSPENDED",
                          "nodeType": "MemberAccess",
                          "src": "3823:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "functionReturnParameters": 385,
                        "id": 392,
                        "nodeType": "Return",
                        "src": "3816:22:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "378aa701",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3727:2:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3751:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$52",
                    "typeString": "enum ICO.State"
                  },
                  "typeName": {
                    "id": 383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 382,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52,
                      "src": "3751:5:0"
                    },
                    "referencedDeclaration": 52,
                    "src": "3751:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3750:7:0"
            },
            "scope": 517,
            "src": "3703:429:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "4180:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 432,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4191:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 433,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4202:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4202:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4191:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 438,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4239:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 439,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4251:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RUNNING",
                          "nodeType": "MemberAccess",
                          "src": "4251:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "4239:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f20616c72656164792073746f70706564206f72206e6f74207965742073746172746564",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4266:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380",
                          "typeString": "literal_string \"ERROR: ICO already stopped or not yet started\""
                        },
                        "value": "ERROR: ICO already stopped or not yet started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c6cb9f2e12271470ff1fe28ad7ab8964b3d4ba227457affca0571cacdd81380",
                          "typeString": "literal_string \"ERROR: ICO already stopped or not yet started\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:83:0"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 445,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4325:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 446,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4336:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "SUSPENDED",
                      "nodeType": "MemberAccess",
                      "src": "4336:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4325:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:26:0"
                }
              ]
            },
            "functionSelector": "c8e569a8",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 430,
                "modifierName": {
                  "id": 429,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4168:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4168:11:0"
              }
            ],
            "name": "stopICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4156:2:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4180:0:0"
            },
            "scope": 517,
            "src": "4140:219:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "4410:179:0",
              "statements": [
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 456,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4421:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 457,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4432:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4432:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4421:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 462,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4469:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 463,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4481:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SUSPENDED",
                          "nodeType": "MemberAccess",
                          "src": "4481:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "4469:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f20616c72656164792072756e6e696e67206f72206e6f74207965742073746172746564",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4498:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5",
                          "typeString": "literal_string \"ERROR: ICO already running or not yet started\""
                        },
                        "value": "ERROR: ICO already running or not yet started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cf22244d4a410c54fed6dfd31ce3b8ab0f194ae097d12513ab43dcbecbc7fc5",
                          "typeString": "literal_string \"ERROR: ICO already running or not yet started\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4461:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4461:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4461:85:0"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 469,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4557:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 470,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4568:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                          "typeString": "type(enum ICO.State)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RUNNING",
                      "nodeType": "MemberAccess",
                      "src": "4568:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4557:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:24:0"
                }
              ]
            },
            "functionSelector": "9cbd7da5",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 454,
                "modifierName": {
                  "id": 453,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4398:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4398:11:0"
              }
            ],
            "name": "resumeICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4386:2:0"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4410:0:0"
            },
            "scope": 517,
            "src": "4368:221:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 486,
              "nodeType": "Block",
              "src": "4677:40:0",
              "statements": [
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 482,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "4688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 483,
                      "name": "_newDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "4698:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4688:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:21:0"
                }
              ]
            },
            "functionSelector": "6d58c88f",
            "id": 487,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 480,
                "modifierName": {
                  "id": 479,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4665:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4665:11:0"
              }
            ],
            "name": "changeDepositAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "_newDeposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "4627:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4626:29:0"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4677:0:0"
            },
            "scope": 517,
            "src": "4597:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 515,
              "nodeType": "Block",
              "src": "4792:196:0",
              "statements": [
                {
                  "expression": {
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 494,
                      "name": "ICOState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4803:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 495,
                        "name": "getCurrentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4814:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$52_$",
                          "typeString": "function () view returns (enum ICO.State)"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4814:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$52",
                        "typeString": "enum ICO.State"
                      }
                    },
                    "src": "4803:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$52",
                      "typeString": "enum ICO.State"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "4803:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$52",
                          "typeString": "enum ICO.State"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 500,
                          "name": "ICOState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "4850:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 501,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4862:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$52_$",
                              "typeString": "type(enum ICO.State)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ENDED",
                          "nodeType": "MemberAccess",
                          "src": "4862:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$52",
                            "typeString": "enum ICO.State"
                          }
                        },
                        "src": "4850:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552524f523a2049434f207374696c6c20696e2070726f6772657373",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4875:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1",
                          "typeString": "literal_string \"ERROR: ICO still in progress\""
                        },
                        "value": "ERROR: ICO still in progress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6492307c2faa0c31eb9c5b6c4c744fa44969e52781d6c32321a38825288211a1",
                          "typeString": "literal_string \"ERROR: ICO still in progress\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4842:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:64:0"
                },
                {
                  "expression": {
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 507,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "4927:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 509,
                      "indexExpression": {
                        "id": 508,
                        "name": "creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "4936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4927:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4947:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4927:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4927:21:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4976:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 493,
                  "id": 514,
                  "nodeType": "Return",
                  "src": "4969:11:0"
                }
              ]
            },
            "functionSelector": "08003f78",
            "id": 516,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 490,
                "modifierName": {
                  "id": 489,
                  "name": "managerOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "4757:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4757:11:0"
              }
            ],
            "name": "burnTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4745:2:0"
            },
            "returnParameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 516,
                  "src": "4778:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4778:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4777:14:0"
            },
            "scope": 517,
            "src": "4726:262:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 518,
        "src": "90:4901:0"
      }
    ],
    "src": "38:4953:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-12-15T14:14:53.354Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}